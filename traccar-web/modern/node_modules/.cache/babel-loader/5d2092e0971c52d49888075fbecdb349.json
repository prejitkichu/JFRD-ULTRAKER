{"ast":null,"code":"var _jsxFileName = \"D:\\\\Personal_Projects\\\\Vehicle Tracking\\\\Development2.0\\\\JFRD-ULTRAKER\\\\traccar-web\\\\modern\\\\src\\\\map\\\\StatusView.js\";\nimport React, { useState } from 'react';\nimport { makeStyles, Paper, IconButton, Grid, Button } from '@material-ui/core';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { useSelector } from 'react-redux';\nimport ReplayIcon from '@material-ui/icons/Replay';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { formatPosition, getStatusColor, getBatteryStatus, formatDistance, formatSpeed } from '../common/formatter';\nimport { useAttributePreference } from '../common/preferences';\nimport RemoveDialog from '../RemoveDialog';\nimport t from '../common/localization';\nimport { getPosition } from '../common/selectors';\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    width: '300px'\n  },\n  ...theme.palette.colors,\n  listItemContainer: {\n    maxWidth: '240px'\n  }\n}));\n\nconst StatusView = _ref => {\n  let {\n    deviceId,\n    onShowDetails,\n    onShowHistory,\n    onEditClick\n  } = _ref;\n  const classes = useStyles();\n  const [removeDialogShown, setRemoveDialogShown] = useState(false);\n  const device = useSelector(state => state.devices.items[deviceId]);\n  const position = useSelector(getPosition(deviceId));\n  const distanceUnit = useAttributePreference('distanceUnit');\n  const speedUnit = useAttributePreference('speedUnit');\n\n  const handleClick = e => {\n    e.preventDefault();\n    onShowDetails(position.id);\n  };\n\n  const handleEditClick = e => {\n    e.preventDefault();\n    onEditClick(deviceId);\n  };\n\n  const handleRemove = () => {\n    setRemoveDialogShown(true);\n  };\n\n  const handleRemoveResult = () => {\n    setRemoveDialogShown(false);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    elevation: 0,\n    square: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    classes: {\n      container: classes.listItemContainer\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    primary: t('deviceStatus'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(ListItemSecondaryAction, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes[getStatusColor(device.status)],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 19\n    }\n  }, device.status))), /*#__PURE__*/React.createElement(ListItem, {\n    classes: {\n      container: classes.listItemContainer\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    primary: t('positionSpeed'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(ListItemSecondaryAction, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 19\n    }\n  }, formatSpeed(position.speed, speedUnit)))), position.attributes.batteryLevel && /*#__PURE__*/React.createElement(ListItem, {\n    classes: {\n      container: classes.listItemContainer\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    primary: t('positionBattery'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(ListItemSecondaryAction, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes[getBatteryStatus(position.attributes.batteryLevel)],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }\n  }, formatPosition(position.attributes.batteryLevel, 'batteryLevel')))), /*#__PURE__*/React.createElement(ListItem, {\n    classes: {\n      container: classes.listItemContainer\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    primary: t('positionDistance'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(ListItemSecondaryAction, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 19\n    }\n  }, formatDistance(position.attributes.totalDistance, distanceUnit)))), /*#__PURE__*/React.createElement(ListItem, {\n    classes: {\n      container: classes.listItemContainer\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    primary: t('positionCourse'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(ListItemSecondaryAction, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 19\n    }\n  }, formatPosition(position.course, 'course')))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"secondary\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 15\n    }\n  }, \"More Info\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: onShowHistory,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ReplayIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ExitToAppIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleEditClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(EditIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleRemove,\n    className: classes.red,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(DeleteIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  })))))), /*#__PURE__*/React.createElement(RemoveDialog, {\n    open: removeDialogShown,\n    endpoint: \"devices\",\n    itemId: deviceId,\n    onResult: handleRemoveResult,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default StatusView;","map":{"version":3,"sources":["D:/Personal_Projects/Vehicle Tracking/Development2.0/JFRD-ULTRAKER/traccar-web/modern/src/map/StatusView.js"],"names":["React","useState","makeStyles","Paper","IconButton","Grid","Button","List","ListItem","ListItemSecondaryAction","ListItemText","useSelector","ReplayIcon","ExitToAppIcon","EditIcon","DeleteIcon","formatPosition","getStatusColor","getBatteryStatus","formatDistance","formatSpeed","useAttributePreference","RemoveDialog","t","getPosition","useStyles","theme","paper","width","palette","colors","listItemContainer","maxWidth","StatusView","deviceId","onShowDetails","onShowHistory","onEditClick","classes","removeDialogShown","setRemoveDialogShown","device","state","devices","items","position","distanceUnit","speedUnit","handleClick","e","preventDefault","id","handleEditClick","handleRemove","handleRemoveResult","container","status","speed","attributes","batteryLevel","totalDistance","course","red"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SACEC,UADF,EACcC,KADd,EACqBC,UADrB,EACiCC,IADjC,EACuCC,MADvC,QAEO,mBAFP;AAGA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,uBAAP,MAAoC,2CAApC;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AAEA,SACEC,cADF,EACkBC,cADlB,EACkCC,gBADlC,EACoDC,cADpD,EACoEC,WADpE,QAEO,qBAFP;AAGA,SAASC,sBAAT,QAAuC,uBAAvC;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,OAAOC,CAAP,MAAc,wBAAd;AACA,SAASC,WAAT,QAA4B,qBAA5B;AAEA,MAAMC,SAAS,GAAGvB,UAAU,CAAEwB,KAAD,KAAY;AACvCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAE;AADF,GADgC;AAIvC,KAAGF,KAAK,CAACG,OAAN,CAAcC,MAJsB;AAKvCC,EAAAA,iBAAiB,EAAE;AACjBC,IAAAA,QAAQ,EAAE;AADO;AALoB,CAAZ,CAAD,CAA5B;;AAUA,MAAMC,UAAU,GAAG,QAEb;AAAA,MAFc;AAClBC,IAAAA,QADkB;AACRC,IAAAA,aADQ;AACOC,IAAAA,aADP;AACsBC,IAAAA;AADtB,GAEd;AACJ,QAAMC,OAAO,GAAGb,SAAS,EAAzB;AAEA,QAAM,CAACc,iBAAD,EAAoBC,oBAApB,IAA4CvC,QAAQ,CAAC,KAAD,CAA1D;AACA,QAAMwC,MAAM,GAAG9B,WAAW,CAAE+B,KAAD,IAAWA,KAAK,CAACC,OAAN,CAAcC,KAAd,CAAoBV,QAApB,CAAZ,CAA1B;AACA,QAAMW,QAAQ,GAAGlC,WAAW,CAACa,WAAW,CAACU,QAAD,CAAZ,CAA5B;AAEA,QAAMY,YAAY,GAAGzB,sBAAsB,CAAC,cAAD,CAA3C;AACA,QAAM0B,SAAS,GAAG1B,sBAAsB,CAAC,WAAD,CAAxC;;AAEA,QAAM2B,WAAW,GAAIC,CAAD,IAAO;AACzBA,IAAAA,CAAC,CAACC,cAAF;AACAf,IAAAA,aAAa,CAACU,QAAQ,CAACM,EAAV,CAAb;AACD,GAHD;;AAKA,QAAMC,eAAe,GAAIH,CAAD,IAAO;AAC7BA,IAAAA,CAAC,CAACC,cAAF;AACAb,IAAAA,WAAW,CAACH,QAAD,CAAX;AACD,GAHD;;AAKA,QAAMmB,YAAY,GAAG,MAAM;AACzBb,IAAAA,oBAAoB,CAAC,IAAD,CAApB;AACD,GAFD;;AAIA,QAAMc,kBAAkB,GAAG,MAAM;AAC/Bd,IAAAA,oBAAoB,CAAC,KAAD,CAApB;AACD,GAFD;;AAIA,sBACE,uDACE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAEF,OAAO,CAACX,KAA1B;AAAiC,IAAA,SAAS,EAAE,CAA5C;AAA+C,IAAA,MAAM,MAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,SAAS,EAAC,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAE;AAAE4B,MAAAA,SAAS,EAAEjB,OAAO,CAACP;AAArB,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAER,CAAC,CAAC,cAAD,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,uBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,SAAS,EAAEe,OAAO,CAACrB,cAAc,CAACwB,MAAM,CAACe,MAAR,CAAf,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0Df,MAAM,CAACe,MAAjE,CADF,CAFF,CADF,eAOE,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAE;AAAED,MAAAA,SAAS,EAAEjB,OAAO,CAACP;AAArB,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAER,CAAC,CAAC,eAAD,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,uBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOH,WAAW,CAACyB,QAAQ,CAACY,KAAV,EAAiBV,SAAjB,CAAlB,CADF,CAFF,CAPF,EAaGF,QAAQ,CAACa,UAAT,CAAoBC,YAApB,iBACC,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAE;AAAEJ,MAAAA,SAAS,EAAEjB,OAAO,CAACP;AAArB,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAER,CAAC,CAAC,iBAAD,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,uBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,SAAS,EAAEe,OAAO,CAACpB,gBAAgB,CAAC2B,QAAQ,CAACa,UAAT,CAAoBC,YAArB,CAAjB,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+E3C,cAAc,CAAC6B,QAAQ,CAACa,UAAT,CAAoBC,YAArB,EAAmC,cAAnC,CAA7F,CADF,CAFF,CAdJ,eAqBE,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAE;AAAEJ,MAAAA,SAAS,EAAEjB,OAAO,CAACP;AAArB,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAER,CAAC,CAAC,kBAAD,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,uBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOJ,cAAc,CAAC0B,QAAQ,CAACa,UAAT,CAAoBE,aAArB,EAAoCd,YAApC,CAArB,CADF,CAFF,CArBF,eA2BE,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAE;AAAES,MAAAA,SAAS,EAAEjB,OAAO,CAACP;AAArB,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAER,CAAC,CAAC,gBAAD,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,uBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOP,cAAc,CAAC6B,QAAQ,CAACgB,MAAV,EAAkB,QAAlB,CAArB,CADF,CAFF,CA3BF,CADF,CADF,eAqCE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,SAAS,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,WAAd;AAA0B,IAAA,OAAO,EAAEb,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CADF,eAIE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAEZ,aAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAJF,eASE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CATF,eAcE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAEgB,eAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAdF,eAmBE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAEC,YAArB;AAAmC,IAAA,SAAS,EAAEf,OAAO,CAACwB,GAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAnBF,CArCF,CADF,CADF,eAkEE,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAEvB,iBAApB;AAAuC,IAAA,QAAQ,EAAC,SAAhD;AAA0D,IAAA,MAAM,EAAEL,QAAlE;AAA4E,IAAA,QAAQ,EAAEoB,kBAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlEF,CADF;AAsED,CApGD;;AAsGA,eAAerB,UAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  makeStyles, Paper, IconButton, Grid, Button,\r\n} from '@material-ui/core';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport ReplayIcon from '@material-ui/icons/Replay';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport {\r\n  formatPosition, getStatusColor, getBatteryStatus, formatDistance, formatSpeed,\r\n} from '../common/formatter';\r\nimport { useAttributePreference } from '../common/preferences';\r\nimport RemoveDialog from '../RemoveDialog';\r\nimport t from '../common/localization';\r\nimport { getPosition } from '../common/selectors';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    width: '300px',\r\n  },\r\n  ...theme.palette.colors,\r\n  listItemContainer: {\r\n    maxWidth: '240px',\r\n  },\r\n}));\r\n\r\nconst StatusView = ({\r\n  deviceId, onShowDetails, onShowHistory, onEditClick,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  const [removeDialogShown, setRemoveDialogShown] = useState(false);\r\n  const device = useSelector((state) => state.devices.items[deviceId]);\r\n  const position = useSelector(getPosition(deviceId));\r\n\r\n  const distanceUnit = useAttributePreference('distanceUnit');\r\n  const speedUnit = useAttributePreference('speedUnit');\r\n\r\n  const handleClick = (e) => {\r\n    e.preventDefault();\r\n    onShowDetails(position.id);\r\n  };\r\n\r\n  const handleEditClick = (e) => {\r\n    e.preventDefault();\r\n    onEditClick(deviceId);\r\n  };\r\n\r\n  const handleRemove = () => {\r\n    setRemoveDialogShown(true);\r\n  };\r\n\r\n  const handleRemoveResult = () => {\r\n    setRemoveDialogShown(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Paper className={classes.paper} elevation={0} square>\r\n        <Grid container direction=\"column\">\r\n          <Grid item>\r\n            <List>\r\n              <ListItem classes={{ container: classes.listItemContainer }}>\r\n                <ListItemText primary={t('deviceStatus')} />\r\n                <ListItemSecondaryAction>\r\n                  <span className={classes[getStatusColor(device.status)]}>{device.status}</span>\r\n                </ListItemSecondaryAction>\r\n              </ListItem>\r\n              <ListItem classes={{ container: classes.listItemContainer }}>\r\n                <ListItemText primary={t('positionSpeed')} />\r\n                <ListItemSecondaryAction>\r\n                  <span>{formatSpeed(position.speed, speedUnit)}</span>\r\n                </ListItemSecondaryAction>\r\n              </ListItem>\r\n              {position.attributes.batteryLevel && (\r\n                <ListItem classes={{ container: classes.listItemContainer }}>\r\n                  <ListItemText primary={t('positionBattery')} />\r\n                  <ListItemSecondaryAction>\r\n                    <span className={classes[getBatteryStatus(position.attributes.batteryLevel)]}>{formatPosition(position.attributes.batteryLevel, 'batteryLevel')}</span>\r\n                  </ListItemSecondaryAction>\r\n                </ListItem>\r\n              )}\r\n              <ListItem classes={{ container: classes.listItemContainer }}>\r\n                <ListItemText primary={t('positionDistance')} />\r\n                <ListItemSecondaryAction>\r\n                  <span>{formatDistance(position.attributes.totalDistance, distanceUnit)}</span>\r\n                </ListItemSecondaryAction>\r\n              </ListItem>\r\n              <ListItem classes={{ container: classes.listItemContainer }}>\r\n                <ListItemText primary={t('positionCourse')} />\r\n                <ListItemSecondaryAction>\r\n                  <span>{formatPosition(position.course, 'course')}</span>\r\n                </ListItemSecondaryAction>\r\n              </ListItem>\r\n            </List>\r\n          </Grid>\r\n          <Grid item container>\r\n            <Grid item>\r\n              <Button color=\"secondary\" onClick={handleClick}>More Info</Button>\r\n            </Grid>\r\n            <Grid item>\r\n              <IconButton onClick={onShowHistory}>\r\n                <ReplayIcon />\r\n              </IconButton>\r\n            </Grid>\r\n            <Grid item>\r\n              <IconButton>\r\n                <ExitToAppIcon />\r\n              </IconButton>\r\n            </Grid>\r\n            <Grid item>\r\n              <IconButton onClick={handleEditClick}>\r\n                <EditIcon />\r\n              </IconButton>\r\n            </Grid>\r\n            <Grid item>\r\n              <IconButton onClick={handleRemove} className={classes.red}>\r\n                <DeleteIcon />\r\n              </IconButton>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n      <RemoveDialog open={removeDialogShown} endpoint=\"devices\" itemId={deviceId} onResult={handleRemoveResult} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StatusView;\r\n"]},"metadata":{},"sourceType":"module"}