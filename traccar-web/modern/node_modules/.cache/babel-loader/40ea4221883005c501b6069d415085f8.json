{"ast":null,"code":"var _jsxFileName = \"D:\\\\Personal_Projects\\\\Vehicle Tracking\\\\Development2.0\\\\JFRD-ULTRAKER\\\\traccar-web\\\\modern\\\\src\\\\form\\\\SelectField.js\";\nimport { FormControl, InputLabel, MenuItem, Select } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport { useEffectAsync } from '../reactHelper';\n\nconst SelectField = _ref => {\n  let {\n    margin,\n    variant,\n    label,\n    multiple,\n    value,\n    emptyValue = 0,\n    onChange,\n    endpoint,\n    data,\n    keyGetter = item => item.id,\n    titleGetter = item => item.name\n  } = _ref;\n  const [items, setItems] = useState(data);\n  useEffectAsync(async () => {\n    if (endpoint) {\n      const response = await fetch(endpoint);\n\n      if (response.ok) {\n        setItems(await response.json());\n      }\n    }\n  }, []);\n\n  if (items) {\n    return /*#__PURE__*/React.createElement(FormControl, {\n      margin: margin,\n      variant: variant,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, label), /*#__PURE__*/React.createElement(Select, {\n      multiple: multiple,\n      value: value,\n      onChange: onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, !multiple && emptyValue !== null && /*#__PURE__*/React.createElement(MenuItem, {\n      value: emptyValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 16\n      }\n    }, \"\\xA0\"), items.map(item => /*#__PURE__*/React.createElement(MenuItem, {\n      key: keyGetter(item),\n      value: keyGetter(item),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, titleGetter(item)))));\n  }\n\n  return null;\n};\n\nexport default SelectField;","map":{"version":3,"sources":["D:/Personal_Projects/Vehicle Tracking/Development2.0/JFRD-ULTRAKER/traccar-web/modern/src/form/SelectField.js"],"names":["FormControl","InputLabel","MenuItem","Select","React","useState","useEffectAsync","SelectField","margin","variant","label","multiple","value","emptyValue","onChange","endpoint","data","keyGetter","item","id","titleGetter","name","items","setItems","response","fetch","ok","json","map"],"mappings":";AAAA,SACEA,WADF,EACeC,UADf,EAC2BC,QAD3B,EACqCC,MADrC,QAEO,mBAFP;AAGA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,cAAT,QAA+B,gBAA/B;;AAEA,MAAMC,WAAW,GAAG,QAYd;AAAA,MAZe;AACnBC,IAAAA,MADmB;AAEnBC,IAAAA,OAFmB;AAGnBC,IAAAA,KAHmB;AAInBC,IAAAA,QAJmB;AAKnBC,IAAAA,KALmB;AAMnBC,IAAAA,UAAU,GAAG,CANM;AAOnBC,IAAAA,QAPmB;AAQnBC,IAAAA,QARmB;AASnBC,IAAAA,IATmB;AAUnBC,IAAAA,SAAS,GAAIC,IAAD,IAAUA,IAAI,CAACC,EAVR;AAWnBC,IAAAA,WAAW,GAAIF,IAAD,IAAUA,IAAI,CAACG;AAXV,GAYf;AACJ,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,CAACW,IAAD,CAAlC;AAEAV,EAAAA,cAAc,CAAC,YAAY;AACzB,QAAIS,QAAJ,EAAc;AACZ,YAAMS,QAAQ,GAAG,MAAMC,KAAK,CAACV,QAAD,CAA5B;;AACA,UAAIS,QAAQ,CAACE,EAAb,EAAiB;AACfH,QAAAA,QAAQ,CAAC,MAAMC,QAAQ,CAACG,IAAT,EAAP,CAAR;AACD;AACF;AACF,GAPa,EAOX,EAPW,CAAd;;AASA,MAAIL,KAAJ,EAAW;AACT,wBACE,oBAAC,WAAD;AAAa,MAAA,MAAM,EAAEd,MAArB;AAA6B,MAAA,OAAO,EAAEC,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAaC,KAAb,CADF,eAEE,oBAAC,MAAD;AACE,MAAA,QAAQ,EAAEC,QADZ;AAEE,MAAA,KAAK,EAAEC,KAFT;AAGE,MAAA,QAAQ,EAAEE,QAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKG,CAACH,QAAD,IAAaE,UAAU,KAAK,IAA5B,iBACI,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAEA,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANP,EAOGS,KAAK,CAACM,GAAN,CAAWV,IAAD,iBACT,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAED,SAAS,CAACC,IAAD,CAAxB;AAAgC,MAAA,KAAK,EAAED,SAAS,CAACC,IAAD,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyDE,WAAW,CAACF,IAAD,CAApE,CADD,CAPH,CAFF,CADF;AAgBD;;AACD,SAAO,IAAP;AACD,CA3CD;;AA6CA,eAAeX,WAAf","sourcesContent":["import {\r\n  FormControl, InputLabel, MenuItem, Select,\r\n} from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nimport { useEffectAsync } from '../reactHelper';\r\n\r\nconst SelectField = ({\r\n  margin,\r\n  variant,\r\n  label,\r\n  multiple,\r\n  value,\r\n  emptyValue = 0,\r\n  onChange,\r\n  endpoint,\r\n  data,\r\n  keyGetter = (item) => item.id,\r\n  titleGetter = (item) => item.name,\r\n}) => {\r\n  const [items, setItems] = useState(data);\r\n\r\n  useEffectAsync(async () => {\r\n    if (endpoint) {\r\n      const response = await fetch(endpoint);\r\n      if (response.ok) {\r\n        setItems(await response.json());\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  if (items) {\r\n    return (\r\n      <FormControl margin={margin} variant={variant}>\r\n        <InputLabel>{label}</InputLabel>\r\n        <Select\r\n          multiple={multiple}\r\n          value={value}\r\n          onChange={onChange}\r\n        >\r\n          {!multiple && emptyValue !== null\r\n            && <MenuItem value={emptyValue}>&nbsp;</MenuItem>}\r\n          {items.map((item) => (\r\n            <MenuItem key={keyGetter(item)} value={keyGetter(item)}>{titleGetter(item)}</MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\nexport default SelectField;\r\n"]},"metadata":{},"sourceType":"module"}