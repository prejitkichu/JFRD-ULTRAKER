{"ast":null,"code":"var _jsxFileName = \"D:\\\\Personal_Projects\\\\Vehicle Tracking\\\\Development2.0\\\\JFRD-ULTRAKER\\\\traccar-web\\\\modern\\\\src\\\\map\\\\SelectedDeviceMap.js\";\nimport React, { useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport maplibregl from 'maplibre-gl';\nimport { Provider, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { map } from './Map';\nimport store from '../store';\nimport StatusView from './StatusView';\nimport theme from '../theme';\nlet popup;\n\nconst SelectedDeviceMap = () => {\n  const history = useHistory();\n  const mapCenter = useSelector(state => {\n    if (state.devices.selectedId) {\n      const position = state.positions.items[state.devices.selectedId] || null;\n\n      if (position) {\n        return {\n          deviceId: state.devices.selectedId,\n          position: [position.longitude, position.latitude]\n        };\n      }\n    }\n\n    return null;\n  });\n\n  const showStatus = (deviceId, coordinates) => {\n    const placeholder = document.createElement('div');\n    ReactDOM.render( /*#__PURE__*/React.createElement(Provider, {\n      store: store,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ThemeProvider, {\n      theme: theme,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(StatusView, {\n      deviceId: deviceId,\n      onShowDetails: positionId => history.push(`/position/${positionId}`),\n      onShowHistory: () => history.push('/replay'),\n      onEditClick: deviceId => history.push(`/device/${deviceId}`),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    }))), placeholder);\n\n    if (popup) {\n      popup.remove();\n    }\n\n    popup = new maplibregl.Popup({\n      offset: 25,\n      anchor: 'top',\n      closeOnClick: true\n    });\n    popup.setDOMContent(placeholder).setLngLat(coordinates).addTo(map);\n  };\n\n  useEffect(() => {\n    if (mapCenter) {\n      map.easeTo({\n        center: mapCenter.position\n      });\n      showStatus(mapCenter.deviceId, mapCenter.position);\n    }\n  }, [mapCenter]);\n  return null;\n};\n\nexport default SelectedDeviceMap;","map":{"version":3,"sources":["D:/Personal_Projects/Vehicle Tracking/Development2.0/JFRD-ULTRAKER/traccar-web/modern/src/map/SelectedDeviceMap.js"],"names":["React","useEffect","ReactDOM","ThemeProvider","maplibregl","Provider","useSelector","useHistory","map","store","StatusView","theme","popup","SelectedDeviceMap","history","mapCenter","state","devices","selectedId","position","positions","items","deviceId","longitude","latitude","showStatus","coordinates","placeholder","document","createElement","render","positionId","push","remove","Popup","offset","anchor","closeOnClick","setDOMContent","setLngLat","addTo","easeTo","center"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,SAASC,aAAT,QAA8B,0BAA9B;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,aAAtC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,GAAT,QAAoB,OAApB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AAEA,IAAIC,KAAJ;;AAEA,MAAMC,iBAAiB,GAAG,MAAM;AAC9B,QAAMC,OAAO,GAAGP,UAAU,EAA1B;AAEA,QAAMQ,SAAS,GAAGT,WAAW,CAAEU,KAAD,IAAW;AACvC,QAAIA,KAAK,CAACC,OAAN,CAAcC,UAAlB,EAA8B;AAC5B,YAAMC,QAAQ,GAAGH,KAAK,CAACI,SAAN,CAAgBC,KAAhB,CAAsBL,KAAK,CAACC,OAAN,CAAcC,UAApC,KAAmD,IAApE;;AACA,UAAIC,QAAJ,EAAc;AACZ,eAAO;AAAEG,UAAAA,QAAQ,EAAEN,KAAK,CAACC,OAAN,CAAcC,UAA1B;AAAsCC,UAAAA,QAAQ,EAAE,CAACA,QAAQ,CAACI,SAAV,EAAqBJ,QAAQ,CAACK,QAA9B;AAAhD,SAAP;AACD;AACF;;AACD,WAAO,IAAP;AACD,GAR4B,CAA7B;;AAUA,QAAMC,UAAU,GAAG,CAACH,QAAD,EAAWI,WAAX,KAA2B;AAC5C,UAAMC,WAAW,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAApB;AACA3B,IAAAA,QAAQ,CAAC4B,MAAT,eACE,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAErB,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,aAAD;AAAe,MAAA,KAAK,EAAEE,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AACE,MAAA,QAAQ,EAAEW,QADZ;AAEE,MAAA,aAAa,EAAGS,UAAD,IAAgBjB,OAAO,CAACkB,IAAR,CAAc,aAAYD,UAAW,EAArC,CAFjC;AAGE,MAAA,aAAa,EAAE,MAAMjB,OAAO,CAACkB,IAAR,CAAa,SAAb,CAHvB;AAIE,MAAA,WAAW,EAAGV,QAAD,IAAcR,OAAO,CAACkB,IAAR,CAAc,WAAUV,QAAS,EAAjC,CAJ7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF,EAWEK,WAXF;;AAcA,QAAIf,KAAJ,EAAW;AACTA,MAAAA,KAAK,CAACqB,MAAN;AACD;;AACDrB,IAAAA,KAAK,GAAG,IAAIR,UAAU,CAAC8B,KAAf,CAAqB;AAC3BC,MAAAA,MAAM,EAAE,EADmB;AAE3BC,MAAAA,MAAM,EAAE,KAFmB;AAG3BC,MAAAA,YAAY,EAAE;AAHa,KAArB,CAAR;AAMAzB,IAAAA,KAAK,CAAC0B,aAAN,CAAoBX,WAApB,EAAiCY,SAAjC,CAA2Cb,WAA3C,EAAwDc,KAAxD,CAA8DhC,GAA9D;AACD,GA1BD;;AA4BAP,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIc,SAAJ,EAAe;AACbP,MAAAA,GAAG,CAACiC,MAAJ,CAAW;AAAEC,QAAAA,MAAM,EAAE3B,SAAS,CAACI;AAApB,OAAX;AACAM,MAAAA,UAAU,CAACV,SAAS,CAACO,QAAX,EAAqBP,SAAS,CAACI,QAA/B,CAAV;AACD;AACF,GALQ,EAKN,CAACJ,SAAD,CALM,CAAT;AAOA,SAAO,IAAP;AACD,CAjDD;;AAmDA,eAAeF,iBAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport maplibregl from 'maplibre-gl';\r\nimport { Provider, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { map } from './Map';\r\nimport store from '../store';\r\nimport StatusView from './StatusView';\r\nimport theme from '../theme';\r\n\r\nlet popup;\r\n\r\nconst SelectedDeviceMap = () => {\r\n  const history = useHistory();\r\n\r\n  const mapCenter = useSelector((state) => {\r\n    if (state.devices.selectedId) {\r\n      const position = state.positions.items[state.devices.selectedId] || null;\r\n      if (position) {\r\n        return { deviceId: state.devices.selectedId, position: [position.longitude, position.latitude] };\r\n      }\r\n    }\r\n    return null;\r\n  });\r\n\r\n  const showStatus = (deviceId, coordinates) => {\r\n    const placeholder = document.createElement('div');\r\n    ReactDOM.render(\r\n      <Provider store={store}>\r\n        <ThemeProvider theme={theme}>\r\n          <StatusView\r\n            deviceId={deviceId}\r\n            onShowDetails={(positionId) => history.push(`/position/${positionId}`)}\r\n            onShowHistory={() => history.push('/replay')}\r\n            onEditClick={(deviceId) => history.push(`/device/${deviceId}`)}\r\n          />\r\n        </ThemeProvider>\r\n      </Provider>,\r\n      placeholder,\r\n    );\r\n\r\n    if (popup) {\r\n      popup.remove();\r\n    }\r\n    popup = new maplibregl.Popup({\r\n      offset: 25,\r\n      anchor: 'top',\r\n      closeOnClick: true,\r\n    });\r\n\r\n    popup.setDOMContent(placeholder).setLngLat(coordinates).addTo(map);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (mapCenter) {\r\n      map.easeTo({ center: mapCenter.position });\r\n      showStatus(mapCenter.deviceId, mapCenter.position);\r\n    }\r\n  }, [mapCenter]);\r\n\r\n  return null;\r\n};\r\n\r\nexport default SelectedDeviceMap;\r\n"]},"metadata":{},"sourceType":"module"}