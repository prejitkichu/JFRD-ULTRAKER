{"ast":null,"code":"import canvasContext from \"canvas-context\";\nlet context;\n/**\n * Tint an image with a canvas 2D context.\n *\n * @param {CanvasImageSource} image The image to tint\n * @param {string | CanvasGradient | CanvasPattern} color A CSS <color> value\n * @param {number} [opacity=0.5] Opacity of the tint between 0 and 1\n * @returns {HTMLCanvasElement}\n */\n\nfunction canvasTintImage(image, color) {\n  let opacity = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0.5;\n\n  if (!context) {\n    const {\n      context: c\n    } = canvasContext(\"2d\", {\n      width: image.width,\n      height: image.height\n    });\n    context = c;\n  } else {\n    context.canvas.width = image.width;\n    context.canvas.height = image.height;\n  }\n\n  context.save();\n  context.fillStyle = color;\n  context.globalAlpha = opacity;\n  context.fillRect(0, 0, context.canvas.width, context.canvas.height);\n  context.globalCompositeOperation = \"destination-atop\";\n  context.globalAlpha = 1;\n  context.drawImage(image, 0, 0);\n  context.restore();\n  return context.canvas;\n}\n\nexport default canvasTintImage;","map":{"version":3,"sources":["D:/Personal_Projects/Vehicle Tracking/Development2.0/JFRD-ULTRAKER/traccar-web/modern/node_modules/canvas-tint-image/index.js"],"names":["canvasContext","context","canvasTintImage","image","color","opacity","c","width","height","canvas","save","fillStyle","globalAlpha","fillRect","globalCompositeOperation","drawImage","restore"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,gBAA1B;AAEA,IAAIC,OAAJ;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,eAAT,CAAyBC,KAAzB,EAAgCC,KAAhC,EAAsD;AAAA,MAAfC,OAAe,uEAAL,GAAK;;AACpD,MAAI,CAACJ,OAAL,EAAc;AACZ,UAAM;AAAEA,MAAAA,OAAO,EAAEK;AAAX,QAAiBN,aAAa,CAAC,IAAD,EAAO;AACzCO,MAAAA,KAAK,EAAEJ,KAAK,CAACI,KAD4B;AAEzCC,MAAAA,MAAM,EAAEL,KAAK,CAACK;AAF2B,KAAP,CAApC;AAIAP,IAAAA,OAAO,GAAGK,CAAV;AACD,GAND,MAMO;AACLL,IAAAA,OAAO,CAACQ,MAAR,CAAeF,KAAf,GAAuBJ,KAAK,CAACI,KAA7B;AACAN,IAAAA,OAAO,CAACQ,MAAR,CAAeD,MAAf,GAAwBL,KAAK,CAACK,MAA9B;AACD;;AAEDP,EAAAA,OAAO,CAACS,IAAR;AACAT,EAAAA,OAAO,CAACU,SAAR,GAAoBP,KAApB;AACAH,EAAAA,OAAO,CAACW,WAAR,GAAsBP,OAAtB;AACAJ,EAAAA,OAAO,CAACY,QAAR,CAAiB,CAAjB,EAAoB,CAApB,EAAuBZ,OAAO,CAACQ,MAAR,CAAeF,KAAtC,EAA6CN,OAAO,CAACQ,MAAR,CAAeD,MAA5D;AACAP,EAAAA,OAAO,CAACa,wBAAR,GAAmC,kBAAnC;AACAb,EAAAA,OAAO,CAACW,WAAR,GAAsB,CAAtB;AACAX,EAAAA,OAAO,CAACc,SAAR,CAAkBZ,KAAlB,EAAyB,CAAzB,EAA4B,CAA5B;AACAF,EAAAA,OAAO,CAACe,OAAR;AAEA,SAAOf,OAAO,CAACQ,MAAf;AACD;;AAED,eAAeP,eAAf","sourcesContent":["import canvasContext from \"canvas-context\";\n\nlet context;\n\n/**\n * Tint an image with a canvas 2D context.\n *\n * @param {CanvasImageSource} image The image to tint\n * @param {string | CanvasGradient | CanvasPattern} color A CSS <color> value\n * @param {number} [opacity=0.5] Opacity of the tint between 0 and 1\n * @returns {HTMLCanvasElement}\n */\nfunction canvasTintImage(image, color, opacity = 0.5) {\n  if (!context) {\n    const { context: c } = canvasContext(\"2d\", {\n      width: image.width,\n      height: image.height,\n    });\n    context = c;\n  } else {\n    context.canvas.width = image.width;\n    context.canvas.height = image.height;\n  }\n\n  context.save();\n  context.fillStyle = color;\n  context.globalAlpha = opacity;\n  context.fillRect(0, 0, context.canvas.width, context.canvas.height);\n  context.globalCompositeOperation = \"destination-atop\";\n  context.globalAlpha = 1;\n  context.drawImage(image, 0, 0);\n  context.restore();\n\n  return context.canvas;\n}\n\nexport default canvasTintImage;\n"]},"metadata":{},"sourceType":"module"}