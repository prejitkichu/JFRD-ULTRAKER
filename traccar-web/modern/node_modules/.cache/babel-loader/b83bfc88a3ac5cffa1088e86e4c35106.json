{"ast":null,"code":"var _jsxFileName = \"D:\\\\Personal_Projects\\\\Vehicle Tracking\\\\Development2.0\\\\JFRD-ULTRAKER\\\\traccar-web\\\\modern\\\\src\\\\GeofencesPage.js\";\nimport React from 'react';\nimport { Divider, isWidthUp, makeStyles, withWidth, Typography, IconButton } from '@material-ui/core';\nimport Drawer from '@material-ui/core/Drawer';\nimport ContainerDimensions from 'react-container-dimensions';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport Map from './map/Map';\nimport CurrentLocationMap from './map/CurrentLocationMap';\nimport GeofenceEditMap from './map/GeofenceEditMap';\nimport GeofencesList from './GeofencesList';\nimport t from './common/localization';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  content: {\n    flexGrow: 1,\n    overflow: 'hidden',\n    display: 'flex',\n    flexDirection: 'row',\n    [theme.breakpoints.down('xs')]: {\n      flexDirection: 'column-reverse'\n    }\n  },\n  drawerPaper: {\n    position: 'relative',\n    [theme.breakpoints.up('sm')]: {\n      width: 350\n    },\n    [theme.breakpoints.down('xs')]: {\n      height: 250\n    }\n  },\n  drawerHeader: { ...theme.mixins.toolbar,\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1)\n  },\n  mapContainer: {\n    flexGrow: 1\n  }\n}));\n\nconst GeofencesPage = _ref => {\n  let {\n    width\n  } = _ref;\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Drawer, {\n    anchor: isWidthUp('sm', width) ? 'left' : 'bottom',\n    variant: \"permanent\",\n    classes: {\n      paper: classes.drawerPaper\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.drawerHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    component: \"a\",\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ArrowBackIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    color: \"inherit\",\n    noWrap: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, t('sharedGeofences'))), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(GeofencesList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.mapContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ContainerDimensions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Map, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CurrentLocationMap, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(GeofenceEditMap, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  }))))));\n};\n\nexport default withWidth()(GeofencesPage);","map":{"version":3,"sources":["D:/Personal_Projects/Vehicle Tracking/Development2.0/JFRD-ULTRAKER/traccar-web/modern/src/GeofencesPage.js"],"names":["React","Divider","isWidthUp","makeStyles","withWidth","Typography","IconButton","Drawer","ContainerDimensions","ArrowBackIcon","Map","CurrentLocationMap","GeofenceEditMap","GeofencesList","t","useStyles","theme","root","height","display","flexDirection","content","flexGrow","overflow","breakpoints","down","drawerPaper","position","up","width","drawerHeader","mixins","toolbar","alignItems","padding","spacing","mapContainer","GeofencesPage","classes","paper"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n  Divider, isWidthUp, makeStyles, withWidth, Typography, IconButton,\r\n} from '@material-ui/core';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport ContainerDimensions from 'react-container-dimensions';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport Map from './map/Map';\r\nimport CurrentLocationMap from './map/CurrentLocationMap';\r\nimport GeofenceEditMap from './map/GeofenceEditMap';\r\nimport GeofencesList from './GeofencesList';\r\n\r\nimport t from './common/localization';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    overflow: 'hidden',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    [theme.breakpoints.down('xs')]: {\r\n      flexDirection: 'column-reverse',\r\n    },\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: 350,\r\n    },\r\n    [theme.breakpoints.down('xs')]: {\r\n      height: 250,\r\n    },\r\n  },\r\n  drawerHeader: {\r\n    ...theme.mixins.toolbar,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(0, 1),\r\n  },\r\n  mapContainer: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nconst GeofencesPage = ({ width }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.content}>\r\n        <Drawer\r\n          anchor={isWidthUp('sm', width) ? 'left' : 'bottom'}\r\n          variant=\"permanent\"\r\n          classes={{ paper: classes.drawerPaper }}\r\n        >\r\n          <div className={classes.drawerHeader}>\r\n            <IconButton component=\"a\" href=\"/\">\r\n              <ArrowBackIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n              {t('sharedGeofences')}\r\n            </Typography>\r\n          </div>\r\n          <Divider />\r\n          <GeofencesList />\r\n        </Drawer>\r\n        <div className={classes.mapContainer}>\r\n          <ContainerDimensions>\r\n            <Map>\r\n              <CurrentLocationMap />\r\n              <GeofenceEditMap />\r\n            </Map>\r\n          </ContainerDimensions>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withWidth()(GeofencesPage);\r\n"]},"metadata":{},"sourceType":"module"}