{"ast":null,"code":"var _jsxFileName = \"D:\\\\Personal_Projects\\\\Vehicle Tracking\\\\Development2.0\\\\JFRD-ULTRAKER\\\\traccar-web\\\\modern\\\\src\\\\map\\\\Map.js\";\nimport 'maplibre-gl/dist/maplibre-gl.css';\nimport './switcher/switcher.css';\nimport maplibregl from 'maplibre-gl';\nimport React, { useRef, useLayoutEffect, useEffect, useState } from 'react';\nimport { SwitcherControl } from './switcher/switcher';\nimport deviceCategories from '../common/deviceCategories';\nimport { prepareIcon, loadImage } from './mapUtil';\nimport { styleCarto, styleMapbox, styleOsm } from './mapStyles';\nimport t from '../common/localization';\nimport { useAttributePreference } from '../common/preferences';\nimport palette from '../theme/palette';\nconst element = document.createElement('div');\nelement.style.width = '100%';\nelement.style.height = '100%';\nexport const map = new maplibregl.Map({\n  container: element,\n  style: styleOsm()\n});\nlet ready = false;\nconst readyListeners = new Set();\n\nconst addReadyListener = listener => {\n  readyListeners.add(listener);\n  listener(ready);\n};\n\nconst removeReadyListener = listener => {\n  readyListeners.delete(listener);\n};\n\nconst updateReadyValue = value => {\n  ready = value;\n  readyListeners.forEach(listener => listener(value));\n};\n\nconst initMap = async () => {\n  if (ready) return;\n  const background = await loadImage('images/background.svg');\n  map.addImage('background', await prepareIcon(background), {\n    pixelRatio: window.devicePixelRatio\n  });\n  await Promise.all(deviceCategories.map(async category => {\n    const results = [];\n    ['green', 'red', 'gray'].forEach(color => {\n      results.push(loadImage(`images/icon/${category}.svg`).then(icon => {\n        map.addImage(`${category}-${color}`, prepareIcon(background, icon, palette.common[color]), {\n          pixelRatio: window.devicePixelRatio\n        });\n      }));\n    });\n    await Promise.all(results);\n  }));\n  updateReadyValue(true);\n};\n\nmap.on('load', initMap);\nmap.addControl(new maplibregl.NavigationControl({\n  showCompass: false\n}));\nmap.addControl(new SwitcherControl([{\n  title: t('mapOsm'),\n  uri: styleOsm()\n}, {\n  title: t('mapCarto'),\n  uri: styleCarto()\n}, {\n  title: t('mapMapboxStreets'),\n  uri: styleMapbox('streets-v11')\n}, {\n  title: t('mapMapboxOutdoors'),\n  uri: styleMapbox('outdoors-v11')\n}, {\n  title: t('mapMapboxSatellite'),\n  uri: styleMapbox('satellite-v9')\n}], t('mapOsm'), () => updateReadyValue(false), () => {\n  const waiting = () => {\n    if (!map.loaded()) {\n      setTimeout(waiting, 100);\n    } else {\n      initMap();\n    }\n  };\n\n  waiting();\n}));\n\nconst Map = _ref => {\n  let {\n    children\n  } = _ref;\n  const containerEl = useRef(null);\n  const [mapReady, setMapReady] = useState(false);\n  const mapboxAccessToken = useAttributePreference('mapboxAccessToken');\n  useEffect(() => {\n    maplibregl.accessToken = mapboxAccessToken;\n  }, [mapboxAccessToken]);\n  useEffect(() => {\n    const listener = ready => setMapReady(ready);\n\n    addReadyListener(listener);\n    return () => {\n      removeReadyListener(listener);\n    };\n  }, []);\n  useLayoutEffect(() => {\n    const currentEl = containerEl.current;\n    currentEl.appendChild(element);\n\n    if (map) {\n      map.resize();\n    }\n\n    return () => {\n      currentEl.removeChild(element);\n    };\n  }, [containerEl]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '100%',\n      height: '100%'\n    },\n    ref: containerEl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 5\n    }\n  }, mapReady && children);\n};\n\nexport default Map;","map":{"version":3,"sources":["D:/Personal_Projects/Vehicle Tracking/Development2.0/JFRD-ULTRAKER/traccar-web/modern/src/map/Map.js"],"names":["maplibregl","React","useRef","useLayoutEffect","useEffect","useState","SwitcherControl","deviceCategories","prepareIcon","loadImage","styleCarto","styleMapbox","styleOsm","t","useAttributePreference","palette","element","document","createElement","style","width","height","map","Map","container","ready","readyListeners","Set","addReadyListener","listener","add","removeReadyListener","delete","updateReadyValue","value","forEach","initMap","background","addImage","pixelRatio","window","devicePixelRatio","Promise","all","category","results","color","push","then","icon","common","on","addControl","NavigationControl","showCompass","title","uri","waiting","loaded","setTimeout","children","containerEl","mapReady","setMapReady","mapboxAccessToken","accessToken","currentEl","current","appendChild","resize","removeChild"],"mappings":"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","sourcesContent":["import 'maplibre-gl/dist/maplibre-gl.css';\r\nimport './switcher/switcher.css';\r\nimport maplibregl from 'maplibre-gl';\r\nimport React, {\r\n  useRef, useLayoutEffect, useEffect, useState,\r\n} from 'react';\r\nimport { SwitcherControl } from './switcher/switcher';\r\nimport deviceCategories from '../common/deviceCategories';\r\nimport { prepareIcon, loadImage } from './mapUtil';\r\nimport { styleCarto, styleMapbox, styleOsm } from './mapStyles';\r\nimport t from '../common/localization';\r\nimport { useAttributePreference } from '../common/preferences';\r\nimport palette from '../theme/palette';\r\n\r\nconst element = document.createElement('div');\r\nelement.style.width = '100%';\r\nelement.style.height = '100%';\r\n\r\nexport const map = new maplibregl.Map({\r\n  container: element,\r\n  style: styleOsm(),\r\n});\r\n\r\nlet ready = false;\r\nconst readyListeners = new Set();\r\n\r\nconst addReadyListener = (listener) => {\r\n  readyListeners.add(listener);\r\n  listener(ready);\r\n};\r\n\r\nconst removeReadyListener = (listener) => {\r\n  readyListeners.delete(listener);\r\n};\r\n\r\nconst updateReadyValue = (value) => {\r\n  ready = value;\r\n  readyListeners.forEach((listener) => listener(value));\r\n};\r\n\r\nconst initMap = async () => {\r\n  if (ready) return;\r\n  const background = await loadImage('images/background.svg');\r\n  map.addImage('background', await prepareIcon(background), {\r\n    pixelRatio: window.devicePixelRatio,\r\n  });\r\n  await Promise.all(deviceCategories.map(async (category) => {\r\n    const results = [];\r\n    ['green', 'red', 'gray'].forEach((color) => {\r\n      results.push(loadImage(`images/icon/${category}.svg`).then((icon) => {\r\n        map.addImage(`${category}-${color}`, prepareIcon(background, icon, palette.common[color]), {\r\n          pixelRatio: window.devicePixelRatio,\r\n        });\r\n      }));\r\n    });\r\n    await Promise.all(results);\r\n  }));\r\n  updateReadyValue(true);\r\n};\r\n\r\nmap.on('load', initMap);\r\n\r\nmap.addControl(new maplibregl.NavigationControl({\r\n  showCompass: false,\r\n}));\r\n\r\nmap.addControl(new SwitcherControl(\r\n  [\r\n    { title: t('mapOsm'), uri: styleOsm() },\r\n    { title: t('mapCarto'), uri: styleCarto() },\r\n    { title: t('mapMapboxStreets'), uri: styleMapbox('streets-v11') },\r\n    { title: t('mapMapboxOutdoors'), uri: styleMapbox('outdoors-v11') },\r\n    { title: t('mapMapboxSatellite'), uri: styleMapbox('satellite-v9') },\r\n  ],\r\n  t('mapOsm'),\r\n  () => updateReadyValue(false),\r\n  () => {\r\n    const waiting = () => {\r\n      if (!map.loaded()) {\r\n        setTimeout(waiting, 100);\r\n      } else {\r\n        initMap();\r\n      }\r\n    };\r\n    waiting();\r\n  },\r\n));\r\n\r\nconst Map = ({ children }) => {\r\n  const containerEl = useRef(null);\r\n\r\n  const [mapReady, setMapReady] = useState(false);\r\n\r\n  const mapboxAccessToken = useAttributePreference('mapboxAccessToken');\r\n\r\n  useEffect(() => {\r\n    maplibregl.accessToken = mapboxAccessToken;\r\n  }, [mapboxAccessToken]);\r\n\r\n  useEffect(() => {\r\n    const listener = (ready) => setMapReady(ready);\r\n    addReadyListener(listener);\r\n    return () => {\r\n      removeReadyListener(listener);\r\n    };\r\n  }, []);\r\n\r\n  useLayoutEffect(() => {\r\n    const currentEl = containerEl.current;\r\n    currentEl.appendChild(element);\r\n    if (map) {\r\n      map.resize();\r\n    }\r\n    return () => {\r\n      currentEl.removeChild(element);\r\n    };\r\n  }, [containerEl]);\r\n\r\n  return (\r\n    <div style={{ width: '100%', height: '100%' }} ref={containerEl}>\r\n      {mapReady && children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n"]},"metadata":{},"sourceType":"module"}