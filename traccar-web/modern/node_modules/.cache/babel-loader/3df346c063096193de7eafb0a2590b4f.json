{"ast":null,"code":"var _jsxFileName = \"D:\\\\Personal_Projects\\\\Vehicle Tracking\\\\Development2.0\\\\JFRD-ULTRAKER\\\\traccar-web\\\\modern\\\\src\\\\reports\\\\ChartReportPage.js\";\nimport React, { useState } from 'react';\nimport { Grid, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\nimport ReportLayout from './ReportLayout';\nimport ReportFilter from './ReportFilter';\nimport Graph from './Graph';\nimport { useAttributePreference } from '../common/preferences';\nimport { formatDate } from '../common/formatter';\nimport { speedFromKnots } from '../common/converter';\nimport t from '../common/localization';\n\nconst Filter = _ref => {\n  let {\n    children,\n    setItems\n  } = _ref;\n  const speedUnit = useAttributePreference('speedUnit');\n\n  const handleSubmit = async (deviceId, from, to, mail, headers) => {\n    const query = new URLSearchParams({\n      deviceId,\n      from,\n      to,\n      mail\n    });\n    const response = await fetch(`/api/reports/route?${query.toString()}`, {\n      headers\n    });\n\n    if (response.ok) {\n      const positions = await response.json();\n      const formattedPositions = positions.map(position => ({\n        speed: Number(speedFromKnots(position.speed, speedUnit)),\n        altitude: position.altitude,\n        accuracy: position.accuracy,\n        fixTime: formatDate(position.fixTime)\n      }));\n      setItems(formattedPositions);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ReportFilter, {\n    handleSubmit: handleSubmit,\n    showOnly: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }), children);\n};\n\nconst ChartType = _ref2 => {\n  let {\n    type,\n    setType\n  } = _ref2;\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"filled\",\n    margin: \"normal\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, t('reportChartType')), /*#__PURE__*/React.createElement(Select, {\n    value: type,\n    onChange: e => setType(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"speed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, t('positionSpeed')), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"accuracy\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, t('positionAccuracy')), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"altitude\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, t('positionAltitude'))))));\n};\n\nconst ChartReportPage = () => {\n  const [items, setItems] = useState([]);\n  const [type, setType] = useState('speed');\n  return /*#__PURE__*/React.createElement(ReportLayout, {\n    filter: /*#__PURE__*/React.createElement(Filter, {\n      setItems: setItems,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ChartType, {\n      type: type,\n      setType: setType,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Graph, {\n    items: items,\n    type: type,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default ChartReportPage;","map":{"version":3,"sources":["D:/Personal_Projects/Vehicle Tracking/Development2.0/JFRD-ULTRAKER/traccar-web/modern/src/reports/ChartReportPage.js"],"names":["React","useState","Grid","FormControl","InputLabel","Select","MenuItem","ReportLayout","ReportFilter","Graph","useAttributePreference","formatDate","speedFromKnots","t","Filter","children","setItems","speedUnit","handleSubmit","deviceId","from","to","mail","headers","query","URLSearchParams","response","fetch","toString","ok","positions","json","formattedPositions","map","position","speed","Number","altitude","accuracy","fixTime","ChartType","type","setType","e","target","value","ChartReportPage","items"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  Grid, FormControl, InputLabel, Select, MenuItem,\r\n} from '@material-ui/core';\r\nimport ReportLayout from './ReportLayout';\r\nimport ReportFilter from './ReportFilter';\r\nimport Graph from './Graph';\r\nimport { useAttributePreference } from '../common/preferences';\r\nimport { formatDate } from '../common/formatter';\r\nimport { speedFromKnots } from '../common/converter';\r\nimport t from '../common/localization';\r\n\r\nconst Filter = ({ children, setItems }) => {\r\n  const speedUnit = useAttributePreference('speedUnit');\r\n\r\n  const handleSubmit = async (deviceId, from, to, mail, headers) => {\r\n    const query = new URLSearchParams({\r\n      deviceId, from, to, mail,\r\n    });\r\n    const response = await fetch(`/api/reports/route?${query.toString()}`, { headers });\r\n    if (response.ok) {\r\n      const positions = await response.json();\r\n      const formattedPositions = positions.map((position) => ({\r\n        speed: Number(speedFromKnots(position.speed, speedUnit)),\r\n        altitude: position.altitude,\r\n        accuracy: position.accuracy,\r\n        fixTime: formatDate(position.fixTime),\r\n      }));\r\n      setItems(formattedPositions);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <ReportFilter handleSubmit={handleSubmit} showOnly />\r\n      {children}\r\n    </>\r\n  );\r\n};\r\n\r\nconst ChartType = ({ type, setType }) => (\r\n  <Grid container spacing={3}>\r\n    <Grid item xs={12} sm={6}>\r\n      <FormControl variant=\"filled\" margin=\"normal\" fullWidth>\r\n        <InputLabel>{t('reportChartType')}</InputLabel>\r\n        <Select value={type} onChange={(e) => setType(e.target.value)}>\r\n          <MenuItem value=\"speed\">{t('positionSpeed')}</MenuItem>\r\n          <MenuItem value=\"accuracy\">{t('positionAccuracy')}</MenuItem>\r\n          <MenuItem value=\"altitude\">{t('positionAltitude')}</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n    </Grid>\r\n  </Grid>\r\n);\r\n\r\nconst ChartReportPage = () => {\r\n  const [items, setItems] = useState([]);\r\n  const [type, setType] = useState('speed');\r\n\r\n  return (\r\n    <ReportLayout filter={(\r\n      <Filter setItems={setItems}>\r\n        <ChartType type={type} setType={setType} />\r\n      </Filter>\r\n    )}\r\n    >\r\n      <Graph items={items} type={type} />\r\n    </ReportLayout>\r\n  );\r\n};\r\n\r\nexport default ChartReportPage;\r\n"]},"metadata":{},"sourceType":"module"}