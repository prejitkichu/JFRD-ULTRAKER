{"ast":null,"code":"var _jsxFileName = \"D:\\\\Personal_Projects\\\\Vehicle Tracking\\\\Development2.0\\\\JFRD-ULTRAKER\\\\traccar-web\\\\modern\\\\src\\\\form\\\\LinkField.js\";\nimport { FormControl, InputLabel, MenuItem, Select } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport { useEffectAsync } from '../reactHelper';\n\nconst LinkField = _ref => {\n  let {\n    margin,\n    variant,\n    label,\n    endpointAll,\n    endpointLinked,\n    baseId,\n    keyBase,\n    keyLink,\n    keyGetter = item => item.id,\n    titleGetter = item => item.name\n  } = _ref;\n  const [items, setItems] = useState();\n  const [linked, setLinked] = useState();\n  useEffectAsync(async () => {\n    const response = await fetch(endpointAll);\n\n    if (response.ok) {\n      setItems(await response.json());\n    }\n  }, []);\n  useEffectAsync(async () => {\n    const response = await fetch(endpointLinked);\n\n    if (response.ok) {\n      const data = await response.json();\n      setLinked(data.map(it => it.id));\n    }\n  }, []);\n\n  const createBody = linkId => {\n    const body = {};\n    body[keyBase] = baseId;\n    body[keyLink] = linkId;\n    return body;\n  };\n\n  const onChange = async event => {\n    const oldValue = linked;\n    const newValue = event.target.value;\n    const results = [];\n    newValue.filter(it => !oldValue.includes(it)).forEach(added => {\n      results.push(fetch('/api/permissions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(createBody(added))\n      }));\n    });\n    oldValue.filter(it => !newValue.includes(it)).forEach(removed => {\n      results.push(fetch('/api/permissions', {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(createBody(removed))\n      }));\n    });\n    await Promise.all(results);\n    setLinked(newValue);\n  };\n\n  if (items && linked) {\n    return /*#__PURE__*/React.createElement(FormControl, {\n      margin: margin,\n      variant: variant,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }, label), /*#__PURE__*/React.createElement(Select, {\n      multiple: true,\n      value: linked,\n      onChange: onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, items.map(item => /*#__PURE__*/React.createElement(MenuItem, {\n      key: keyGetter(item),\n      value: keyGetter(item),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, titleGetter(item)))));\n  }\n\n  return null;\n};\n\nexport default LinkField;","map":{"version":3,"sources":["D:/Personal_Projects/Vehicle Tracking/Development2.0/JFRD-ULTRAKER/traccar-web/modern/src/form/LinkField.js"],"names":["FormControl","InputLabel","MenuItem","Select","React","useState","useEffectAsync","LinkField","margin","variant","label","endpointAll","endpointLinked","baseId","keyBase","keyLink","keyGetter","item","id","titleGetter","name","items","setItems","linked","setLinked","response","fetch","ok","json","data","map","it","createBody","linkId","body","onChange","event","oldValue","newValue","target","value","results","filter","includes","forEach","added","push","method","headers","JSON","stringify","removed","Promise","all"],"mappings":";AAAA,SACEA,WADF,EACeC,UADf,EAC2BC,QAD3B,EACqCC,MADrC,QAEO,mBAFP;AAGA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,cAAT,QAA+B,gBAA/B;;AAEA,MAAMC,SAAS,GAAG,QAWZ;AAAA,MAXa;AACjBC,IAAAA,MADiB;AAEjBC,IAAAA,OAFiB;AAGjBC,IAAAA,KAHiB;AAIjBC,IAAAA,WAJiB;AAKjBC,IAAAA,cALiB;AAMjBC,IAAAA,MANiB;AAOjBC,IAAAA,OAPiB;AAQjBC,IAAAA,OARiB;AASjBC,IAAAA,SAAS,GAAIC,IAAD,IAAUA,IAAI,CAACC,EATV;AAUjBC,IAAAA,WAAW,GAAIF,IAAD,IAAUA,IAAI,CAACG;AAVZ,GAWb;AACJ,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,EAAlC;AACA,QAAM,CAACkB,MAAD,EAASC,SAAT,IAAsBnB,QAAQ,EAApC;AAEAC,EAAAA,cAAc,CAAC,YAAY;AACzB,UAAMmB,QAAQ,GAAG,MAAMC,KAAK,CAACf,WAAD,CAA5B;;AACA,QAAIc,QAAQ,CAACE,EAAb,EAAiB;AACfL,MAAAA,QAAQ,CAAC,MAAMG,QAAQ,CAACG,IAAT,EAAP,CAAR;AACD;AACF,GALa,EAKX,EALW,CAAd;AAOAtB,EAAAA,cAAc,CAAC,YAAY;AACzB,UAAMmB,QAAQ,GAAG,MAAMC,KAAK,CAACd,cAAD,CAA5B;;AACA,QAAIa,QAAQ,CAACE,EAAb,EAAiB;AACf,YAAME,IAAI,GAAG,MAAMJ,QAAQ,CAACG,IAAT,EAAnB;AACAJ,MAAAA,SAAS,CAACK,IAAI,CAACC,GAAL,CAAUC,EAAD,IAAQA,EAAE,CAACb,EAApB,CAAD,CAAT;AACD;AACF,GANa,EAMX,EANW,CAAd;;AAQA,QAAMc,UAAU,GAAIC,MAAD,IAAY;AAC7B,UAAMC,IAAI,GAAG,EAAb;AACAA,IAAAA,IAAI,CAACpB,OAAD,CAAJ,GAAgBD,MAAhB;AACAqB,IAAAA,IAAI,CAACnB,OAAD,CAAJ,GAAgBkB,MAAhB;AACA,WAAOC,IAAP;AACD,GALD;;AAOA,QAAMC,QAAQ,GAAG,MAAOC,KAAP,IAAiB;AAChC,UAAMC,QAAQ,GAAGd,MAAjB;AACA,UAAMe,QAAQ,GAAGF,KAAK,CAACG,MAAN,CAAaC,KAA9B;AACA,UAAMC,OAAO,GAAG,EAAhB;AACAH,IAAAA,QAAQ,CAACI,MAAT,CAAiBX,EAAD,IAAQ,CAACM,QAAQ,CAACM,QAAT,CAAkBZ,EAAlB,CAAzB,EAAgDa,OAAhD,CAAyDC,KAAD,IAAW;AACjEJ,MAAAA,OAAO,CAACK,IAAR,CAAapB,KAAK,CAAC,kBAAD,EAAqB;AACrCqB,QAAAA,MAAM,EAAE,MAD6B;AAErCC,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB,SAF4B;AAGrCd,QAAAA,IAAI,EAAEe,IAAI,CAACC,SAAL,CAAelB,UAAU,CAACa,KAAD,CAAzB;AAH+B,OAArB,CAAlB;AAKD,KAND;AAOAR,IAAAA,QAAQ,CAACK,MAAT,CAAiBX,EAAD,IAAQ,CAACO,QAAQ,CAACK,QAAT,CAAkBZ,EAAlB,CAAzB,EAAgDa,OAAhD,CAAyDO,OAAD,IAAa;AACnEV,MAAAA,OAAO,CAACK,IAAR,CAAapB,KAAK,CAAC,kBAAD,EAAqB;AACrCqB,QAAAA,MAAM,EAAE,QAD6B;AAErCC,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB,SAF4B;AAGrCd,QAAAA,IAAI,EAAEe,IAAI,CAACC,SAAL,CAAelB,UAAU,CAACmB,OAAD,CAAzB;AAH+B,OAArB,CAAlB;AAKD,KAND;AAOA,UAAMC,OAAO,CAACC,GAAR,CAAYZ,OAAZ,CAAN;AACAjB,IAAAA,SAAS,CAACc,QAAD,CAAT;AACD,GApBD;;AAsBA,MAAIjB,KAAK,IAAIE,MAAb,EAAqB;AACnB,wBACE,oBAAC,WAAD;AAAa,MAAA,MAAM,EAAEf,MAArB;AAA6B,MAAA,OAAO,EAAEC,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAaC,KAAb,CADF,eAEE,oBAAC,MAAD;AACE,MAAA,QAAQ,MADV;AAEE,MAAA,KAAK,EAAEa,MAFT;AAGE,MAAA,QAAQ,EAAEY,QAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKGd,KAAK,CAACS,GAAN,CAAWb,IAAD,iBACT,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAED,SAAS,CAACC,IAAD,CAAxB;AAAgC,MAAA,KAAK,EAAED,SAAS,CAACC,IAAD,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyDE,WAAW,CAACF,IAAD,CAApE,CADD,CALH,CAFF,CADF;AAcD;;AACD,SAAO,IAAP;AACD,CA5ED;;AA8EA,eAAeV,SAAf","sourcesContent":["import {\r\n  FormControl, InputLabel, MenuItem, Select,\r\n} from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nimport { useEffectAsync } from '../reactHelper';\r\n\r\nconst LinkField = ({\r\n  margin,\r\n  variant,\r\n  label,\r\n  endpointAll,\r\n  endpointLinked,\r\n  baseId,\r\n  keyBase,\r\n  keyLink,\r\n  keyGetter = (item) => item.id,\r\n  titleGetter = (item) => item.name,\r\n}) => {\r\n  const [items, setItems] = useState();\r\n  const [linked, setLinked] = useState();\r\n\r\n  useEffectAsync(async () => {\r\n    const response = await fetch(endpointAll);\r\n    if (response.ok) {\r\n      setItems(await response.json());\r\n    }\r\n  }, []);\r\n\r\n  useEffectAsync(async () => {\r\n    const response = await fetch(endpointLinked);\r\n    if (response.ok) {\r\n      const data = await response.json();\r\n      setLinked(data.map((it) => it.id));\r\n    }\r\n  }, []);\r\n\r\n  const createBody = (linkId) => {\r\n    const body = {};\r\n    body[keyBase] = baseId;\r\n    body[keyLink] = linkId;\r\n    return body;\r\n  };\r\n\r\n  const onChange = async (event) => {\r\n    const oldValue = linked;\r\n    const newValue = event.target.value;\r\n    const results = [];\r\n    newValue.filter((it) => !oldValue.includes(it)).forEach((added) => {\r\n      results.push(fetch('/api/permissions', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(createBody(added)),\r\n      }));\r\n    });\r\n    oldValue.filter((it) => !newValue.includes(it)).forEach((removed) => {\r\n      results.push(fetch('/api/permissions', {\r\n        method: 'DELETE',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(createBody(removed)),\r\n      }));\r\n    });\r\n    await Promise.all(results);\r\n    setLinked(newValue);\r\n  };\r\n\r\n  if (items && linked) {\r\n    return (\r\n      <FormControl margin={margin} variant={variant}>\r\n        <InputLabel>{label}</InputLabel>\r\n        <Select\r\n          multiple\r\n          value={linked}\r\n          onChange={onChange}\r\n        >\r\n          {items.map((item) => (\r\n            <MenuItem key={keyGetter(item)} value={keyGetter(item)}>{titleGetter(item)}</MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\nexport default LinkField;\r\n"]},"metadata":{},"sourceType":"module"}