{"ast":null,"code":"var _jsxFileName = \"D:\\\\Personal_Projects\\\\Vehicle Tracking\\\\Development2.0\\\\JFRD-ULTRAKER\\\\traccar-web\\\\modern\\\\src\\\\settings\\\\NotificationPage.js\";\nimport React, { useState } from 'react';\nimport { Accordion, AccordionSummary, AccordionDetails, makeStyles, Typography, FormControlLabel, Checkbox } from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport t, { findStringKeys } from '../common/localization';\nimport EditItemView from '../EditItemView';\nimport { prefixString, unprefixString } from '../common/stringUtils';\nimport SelectField from '../form/SelectField';\nconst useStyles = makeStyles(() => ({\n  details: {\n    flexDirection: 'column'\n  }\n}));\n\nconst NotificationPage = () => {\n  const classes = useStyles();\n  const [item, setItem] = useState();\n  const alarms = findStringKeys(it => it.startsWith('alarm')).map(it => ({\n    key: unprefixString('alarm', it),\n    name: t(it)\n  }));\n  return /*#__PURE__*/React.createElement(EditItemView, {\n    endpoint: \"notifications\",\n    item: item,\n    setItem: setItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, item && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Accordion, {\n    defaultExpanded: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(AccordionSummary, {\n    expandIcon: /*#__PURE__*/React.createElement(ExpandMoreIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 43\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 15\n    }\n  }, t('sharedRequired'))), /*#__PURE__*/React.createElement(AccordionDetails, {\n    className: classes.details,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(SelectField, {\n    margin: \"normal\",\n    value: item.type || 'alarm',\n    emptyValue: null,\n    onChange: e => setItem({ ...item,\n      type: e.target.value\n    }),\n    endpoint: \"/api/notifications/types\",\n    keyGetter: it => it.type,\n    titleGetter: it => t(prefixString('event', it.type)),\n    label: t('sharedType'),\n    variant: \"filled\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(SelectField, {\n    multiple: true,\n    margin: \"normal\",\n    value: item.notificators ? item.notificators.split(/[, ]+/) : [],\n    onChange: e => setItem({ ...item,\n      notificators: e.target.value.join()\n    }),\n    endpoint: \"/api/notifications/notificators\",\n    keyGetter: it => it.type,\n    titleGetter: it => t(prefixString('notificator', it.type)),\n    label: t('notificationNotificators'),\n    variant: \"filled\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }\n  }), (!item.type || item.type === 'alarm') && /*#__PURE__*/React.createElement(SelectField, {\n    multiple: true,\n    margin: \"normal\",\n    value: item.attributes && item.attributes.alarms ? item.attributes.alarms.split(/[, ]+/) : [],\n    onChange: e => setItem({ ...item,\n      attributes: { ...item.attributes,\n        alarms: e.target.value.join()\n      }\n    }),\n    data: alarms,\n    keyGetter: it => it.key,\n    label: t('sharedAlarms'),\n    variant: \"filled\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: item.always,\n      onChange: event => setItem({ ...item,\n        always: event.target.checked\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 19\n      }\n    }),\n    label: t('notificationAlways'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  })))));\n};\n\nexport default NotificationPage;","map":{"version":3,"sources":["D:/Personal_Projects/Vehicle Tracking/Development2.0/JFRD-ULTRAKER/traccar-web/modern/src/settings/NotificationPage.js"],"names":["React","useState","Accordion","AccordionSummary","AccordionDetails","makeStyles","Typography","FormControlLabel","Checkbox","ExpandMoreIcon","t","findStringKeys","EditItemView","prefixString","unprefixString","SelectField","useStyles","details","flexDirection","NotificationPage","classes","item","setItem","alarms","it","startsWith","map","key","name","type","e","target","value","notificators","split","join","attributes","always","event","checked"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport {\r\n  Accordion, AccordionSummary, AccordionDetails, makeStyles, Typography, FormControlLabel, Checkbox,\r\n} from '@material-ui/core';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport t, { findStringKeys } from '../common/localization';\r\nimport EditItemView from '../EditItemView';\r\nimport { prefixString, unprefixString } from '../common/stringUtils';\r\nimport SelectField from '../form/SelectField';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  details: {\r\n    flexDirection: 'column',\r\n  },\r\n}));\r\n\r\nconst NotificationPage = () => {\r\n  const classes = useStyles();\r\n\r\n  const [item, setItem] = useState();\r\n\r\n  const alarms = findStringKeys((it) => it.startsWith('alarm')).map((it) => ({\r\n    key: unprefixString('alarm', it),\r\n    name: t(it),\r\n  }));\r\n\r\n  return (\r\n    <EditItemView endpoint=\"notifications\" item={item} setItem={setItem}>\r\n      {item\r\n        && (\r\n        <>\r\n          <Accordion defaultExpanded>\r\n            <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n              <Typography variant=\"subtitle1\">\r\n                {t('sharedRequired')}\r\n              </Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails className={classes.details}>\r\n              <SelectField\r\n                margin=\"normal\"\r\n                value={item.type || 'alarm'}\r\n                emptyValue={null}\r\n                onChange={(e) => setItem({ ...item, type: e.target.value })}\r\n                endpoint=\"/api/notifications/types\"\r\n                keyGetter={(it) => it.type}\r\n                titleGetter={(it) => t(prefixString('event', it.type))}\r\n                label={t('sharedType')}\r\n                variant=\"filled\"\r\n              />\r\n              <SelectField\r\n                multiple\r\n                margin=\"normal\"\r\n                value={item.notificators ? item.notificators.split(/[, ]+/) : []}\r\n                onChange={(e) => setItem({ ...item, notificators: e.target.value.join() })}\r\n                endpoint=\"/api/notifications/notificators\"\r\n                keyGetter={(it) => it.type}\r\n                titleGetter={(it) => t(prefixString('notificator', it.type))}\r\n                label={t('notificationNotificators')}\r\n                variant=\"filled\"\r\n              />\r\n              {(!item.type || item.type === 'alarm')\r\n                && (\r\n                <SelectField\r\n                  multiple\r\n                  margin=\"normal\"\r\n                  value={item.attributes && item.attributes.alarms ? item.attributes.alarms.split(/[, ]+/) : []}\r\n                  onChange={(e) => setItem({ ...item, attributes: { ...item.attributes, alarms: e.target.value.join() } })}\r\n                  data={alarms}\r\n                  keyGetter={(it) => it.key}\r\n                  label={t('sharedAlarms')}\r\n                  variant=\"filled\"\r\n                />\r\n                )}\r\n              <FormControlLabel\r\n                control={(\r\n                  <Checkbox\r\n                    checked={item.always}\r\n                    onChange={(event) => setItem({ ...item, always: event.target.checked })}\r\n                  />\r\n                )}\r\n                label={t('notificationAlways')}\r\n              />\r\n            </AccordionDetails>\r\n          </Accordion>\r\n        </>\r\n        )}\r\n    </EditItemView>\r\n  );\r\n};\r\n\r\nexport default NotificationPage;\r\n"]},"metadata":{},"sourceType":"module"}