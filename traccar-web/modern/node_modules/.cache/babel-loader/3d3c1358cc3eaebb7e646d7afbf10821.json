{"ast":null,"code":"var _jsxFileName = \"D:\\\\Personal_Projects\\\\Vehicle Tracking\\\\Development2.0\\\\JFRD-ULTRAKER\\\\traccar-web\\\\modern\\\\src\\\\DevicesList.js\";\nimport React, { useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport Grid from '@material-ui/core/Grid';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { FixedSizeList } from 'react-window';\nimport AutoSizer from 'react-virtualized-auto-sizer';\nimport BatteryFullIcon from '@material-ui/icons/BatteryFull';\nimport { ReactComponent as IgnitionIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../public/images/icon/ignition.svg\";\nimport { devicesActions } from './store';\nimport EditCollectionView from './EditCollectionView';\nimport { useEffectAsync } from './reactHelper';\nimport { formatPosition } from './common/formatter';\nimport { getDevices, getPosition } from './common/selectors';\nconst useStyles = makeStyles(theme => ({\n  list: {\n    maxHeight: '100%'\n  },\n  listInner: {\n    position: 'relative',\n    margin: theme.spacing(1.5, 0)\n  },\n  icon: {\n    width: '25px',\n    height: '25px',\n    filter: 'brightness(0) invert(1)'\n  },\n  listItem: {\n    backgroundColor: 'white',\n    '&:hover': {\n      backgroundColor: 'white'\n    }\n  },\n  batteryText: {\n    fontSize: '0.75rem',\n    fontWeight: 'normal',\n    lineHeight: '0.875rem'\n  },\n  green: {\n    color: theme.palette.common.green\n  },\n  red: {\n    color: theme.palette.common.red\n  },\n  gray: {\n    color: theme.palette.common.gray\n  },\n  indicators: {\n    lineHeight: 1\n  }\n}));\n\nconst getStatusColor = status => {\n  switch (status) {\n    case 'online':\n      return 'green';\n\n    case 'offline':\n      return 'red';\n\n    case 'unknown':\n    default:\n      return 'gray';\n  }\n};\n\nconst getBatteryStatus = batteryLevel => {\n  if (batteryLevel >= 70) {\n    return 'green';\n  }\n\n  if (batteryLevel > 30) {\n    return 'gray';\n  }\n\n  return 'red';\n};\n\nconst DeviceRow = _ref => {\n  let {\n    data,\n    index,\n    style\n  } = _ref;\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const {\n    items\n  } = data;\n  const item = items[index];\n  const position = useSelector(getPosition(item.id));\n  const showIgnition = (position === null || position === void 0 ? void 0 : position.attributes.hasOwnProperty('ignition')) && position.attributes.ignition;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    key: item.id,\n    className: classes.listItem,\n    onClick: () => dispatch(devicesActions.select(item)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ListItemAvatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: classes.icon,\n    src: `images/icon/${item.category || 'default'}.svg`,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(ListItemText, {\n    primary: item.name,\n    secondary: item.status,\n    classes: {\n      secondary: classes[getStatusColor(item.status)]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ListItemSecondaryAction, {\n    className: classes.indicators,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, position && /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    alignItems: \"center\",\n    alignContent: \"center\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, showIgnition && /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(SvgIcon, {\n    component: IgnitionIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 15\n    }\n  })), position.attributes.hasOwnProperty('batteryLevel') && /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    xs: true,\n    alignItems: \"center\",\n    alignContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.batteryText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }, formatPosition(position.attributes.batteryLevel, 'batteryLevel'))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(BatteryFullIcon, {\n    className: classes[getBatteryStatus(position.attributes.batteryLevel)],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  })))))));\n};\n\nconst DeviceView = _ref2 => {\n  let {\n    updateTimestamp,\n    onMenuClick\n  } = _ref2;\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const listInnerEl = useRef(null);\n  const items = useSelector(getDevices);\n\n  if (listInnerEl.current) {\n    listInnerEl.current.className = classes.listInner;\n  }\n\n  useEffectAsync(async () => {\n    const response = await fetch('/api/devices');\n\n    if (response.ok) {\n      dispatch(devicesActions.refresh(await response.json()));\n    }\n  }, [updateTimestamp]);\n  return /*#__PURE__*/React.createElement(AutoSizer, {\n    className: classes.list,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 5\n    }\n  }, _ref3 => {\n    let {\n      height,\n      width\n    } = _ref3;\n    return /*#__PURE__*/React.createElement(List, {\n      disablePadding: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FixedSizeList, {\n      width: width,\n      height: height,\n      itemCount: items.length,\n      itemData: {\n        items,\n        onMenuClick\n      },\n      itemSize: 72,\n      overscanCount: 10,\n      innerRef: listInnerEl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }\n    }, DeviceRow));\n  });\n};\n\nconst DevicesList = () => /*#__PURE__*/React.createElement(EditCollectionView, {\n  content: DeviceView,\n  editPath: \"/device\",\n  endpoint: \"devices\",\n  disableAdd: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 3\n  }\n});\n\nexport default DevicesList;","map":{"version":3,"sources":["D:/Personal_Projects/Vehicle Tracking/Development2.0/JFRD-ULTRAKER/traccar-web/modern/src/DevicesList.js"],"names":["React","useRef","useDispatch","useSelector","makeStyles","Avatar","List","ListItem","ListItemAvatar","ListItemSecondaryAction","Grid","ListItemText","SvgIcon","FixedSizeList","AutoSizer","BatteryFullIcon","devicesActions","EditCollectionView","useEffectAsync","formatPosition","getDevices","getPosition","useStyles","theme","list","maxHeight","listInner","position","margin","spacing","icon","width","height","filter","listItem","backgroundColor","batteryText","fontSize","fontWeight","lineHeight","green","color","palette","common","red","gray","indicators","getStatusColor","status","getBatteryStatus","batteryLevel","DeviceRow","data","index","style","classes","dispatch","items","item","id","showIgnition","attributes","hasOwnProperty","ignition","select","category","name","secondary","IgnitionIcon","DeviceView","updateTimestamp","onMenuClick","listInnerEl","current","className","response","fetch","ok","refresh","json","length","DevicesList"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport SvgIcon from '@material-ui/core/SvgIcon';\r\nimport { FixedSizeList } from 'react-window';\r\nimport AutoSizer from 'react-virtualized-auto-sizer';\r\nimport BatteryFullIcon from '@material-ui/icons/BatteryFull';\r\nimport { ReactComponent as IgnitionIcon } from '../public/images/icon/ignition.svg';\r\n\r\nimport { devicesActions } from './store';\r\nimport EditCollectionView from './EditCollectionView';\r\nimport { useEffectAsync } from './reactHelper';\r\nimport { formatPosition } from './common/formatter';\r\nimport { getDevices, getPosition } from './common/selectors';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  list: {\r\n    maxHeight: '100%',\r\n  },\r\n  listInner: {\r\n    position: 'relative',\r\n    margin: theme.spacing(1.5, 0),\r\n  },\r\n  icon: {\r\n    width: '25px',\r\n    height: '25px',\r\n    filter: 'brightness(0) invert(1)',\r\n  },\r\n  listItem: {\r\n    backgroundColor: 'white',\r\n    '&:hover': {\r\n      backgroundColor: 'white',\r\n    },\r\n  },\r\n  batteryText: {\r\n    fontSize: '0.75rem',\r\n    fontWeight: 'normal',\r\n    lineHeight: '0.875rem',\r\n  },\r\n  green: {\r\n    color: theme.palette.common.green,\r\n  },\r\n  red: {\r\n    color: theme.palette.common.red,\r\n  },\r\n  gray: {\r\n    color: theme.palette.common.gray,\r\n  },\r\n  indicators: {\r\n    lineHeight: 1,\r\n  },\r\n}));\r\n\r\nconst getStatusColor = (status) => {\r\n  switch (status) {\r\n    case 'online':\r\n      return 'green';\r\n    case 'offline':\r\n      return 'red';\r\n    case 'unknown':\r\n    default:\r\n      return 'gray';\r\n  }\r\n};\r\n\r\nconst getBatteryStatus = (batteryLevel) => {\r\n  if (batteryLevel >= 70) {\r\n    return 'green';\r\n  }\r\n  if (batteryLevel > 30) {\r\n    return 'gray';\r\n  }\r\n  return 'red';\r\n};\r\n\r\nconst DeviceRow = ({ data, index, style }) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const { items } = data;\r\n  const item = items[index];\r\n  const position = useSelector(getPosition(item.id));\r\n  const showIgnition = position?.attributes.hasOwnProperty('ignition') && position.attributes.ignition;\r\n\r\n  return (\r\n    <div style={style}>\r\n      <ListItem button key={item.id} className={classes.listItem} onClick={() => dispatch(devicesActions.select(item))}>\r\n        <ListItemAvatar>\r\n          <Avatar>\r\n            <img className={classes.icon} src={`images/icon/${item.category || 'default'}.svg`} alt=\"\" />\r\n          </Avatar>\r\n        </ListItemAvatar>\r\n        <ListItemText primary={item.name} secondary={item.status} classes={{ secondary: classes[getStatusColor(item.status)] }} />\r\n        <ListItemSecondaryAction className={classes.indicators}>\r\n          {position && (\r\n          <Grid container direction=\"row\" alignItems=\"center\" alignContent=\"center\" spacing={2}>\r\n            {showIgnition && (\r\n            <Grid item>\r\n              <SvgIcon component={IgnitionIcon} />\r\n            </Grid>\r\n            )}\r\n            {position.attributes.hasOwnProperty('batteryLevel') && (\r\n            <Grid item container xs alignItems=\"center\" alignContent=\"center\">\r\n              <Grid item>\r\n                <span className={classes.batteryText}>{formatPosition(position.attributes.batteryLevel, 'batteryLevel')}</span>\r\n              </Grid>\r\n              <Grid item>\r\n                <BatteryFullIcon className={classes[getBatteryStatus(position.attributes.batteryLevel)]} />\r\n              </Grid>\r\n            </Grid>\r\n            )}\r\n          </Grid>\r\n          )}\r\n        </ListItemSecondaryAction>\r\n      </ListItem>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst DeviceView = ({ updateTimestamp, onMenuClick }) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const listInnerEl = useRef(null);\r\n\r\n  const items = useSelector(getDevices);\r\n\r\n  if (listInnerEl.current) {\r\n    listInnerEl.current.className = classes.listInner;\r\n  }\r\n\r\n  useEffectAsync(async () => {\r\n    const response = await fetch('/api/devices');\r\n    if (response.ok) {\r\n      dispatch(devicesActions.refresh(await response.json()));\r\n    }\r\n  }, [updateTimestamp]);\r\n\r\n  return (\r\n    <AutoSizer className={classes.list}>\r\n      {({ height, width }) => (\r\n        <List disablePadding>\r\n          <FixedSizeList\r\n            width={width}\r\n            height={height}\r\n            itemCount={items.length}\r\n            itemData={{ items, onMenuClick }}\r\n            itemSize={72}\r\n            overscanCount={10}\r\n            innerRef={listInnerEl}\r\n          >\r\n            {DeviceRow}\r\n          </FixedSizeList>\r\n        </List>\r\n      )}\r\n    </AutoSizer>\r\n  );\r\n};\r\n\r\nconst DevicesList = () => (\r\n  <EditCollectionView content={DeviceView} editPath=\"/device\" endpoint=\"devices\" disableAdd />\r\n);\r\n\r\nexport default DevicesList;\r\n"]},"metadata":{},"sourceType":"module"}