{"ast":null,"code":"var _jsxFileName = \"D:\\\\Personal_Projects\\\\Vehicle Tracking\\\\Development2.0\\\\JFRD-ULTRAKER\\\\traccar-web\\\\modern\\\\src\\\\PositionPage.js\";\nimport React, { Fragment, useState } from 'react';\nimport { makeStyles, Typography, ListItem, ListItemText, ListItemSecondaryAction, List, Container, Paper, Divider } from '@material-ui/core';\nimport { useParams } from 'react-router-dom';\nimport t from './common/localization';\nimport { useEffectAsync } from './reactHelper';\nimport MainToolbar from './MainToolbar';\nimport { formatPosition } from './common/formatter';\nimport { prefixString } from './common/stringUtils';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2)\n  }\n}));\n\nconst PositionPage = () => {\n  const classes = useStyles();\n  const {\n    id\n  } = useParams();\n  const [item, setItem] = useState();\n  useEffectAsync(async () => {\n    if (id) {\n      const response = await fetch(`/api/positions?id=${id}`, {\n        headers: {\n          Accept: 'application/json'\n        }\n      });\n\n      if (response.ok) {\n        const items = await response.json();\n        setItem(items[0]);\n      }\n    } else {\n      setItem({});\n    }\n  }, [id]);\n\n  const formatKey = key => t(prefixString('position', key)) || `${t('sharedAttribute')} \"${key}\"`;\n\n  const attributesList = () => {\n    const combinedList = { ...item,\n      ...item.attributes\n    };\n    return Object.entries(combinedList).filter(_ref => {\n      let [, value] = _ref;\n      return typeof value !== 'object';\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MainToolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    maxWidth: \"sm\",\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, item && /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, attributesList().map((_ref2, index, list) => {\n    let [key, value] = _ref2;\n    return /*#__PURE__*/React.createElement(Fragment, {\n      key: key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ListItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(ListItemText, {\n      primary: formatKey(key),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(ListItemSecondaryAction, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 23\n      }\n    }, formatPosition(value, key)))), index < list.length - 1 ? /*#__PURE__*/React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 46\n      }\n    }) : null);\n  })))));\n};\n\nexport default PositionPage;","map":{"version":3,"sources":["D:/Personal_Projects/Vehicle Tracking/Development2.0/JFRD-ULTRAKER/traccar-web/modern/src/PositionPage.js"],"names":["React","Fragment","useState","makeStyles","Typography","ListItem","ListItemText","ListItemSecondaryAction","List","Container","Paper","Divider","useParams","t","useEffectAsync","MainToolbar","formatPosition","prefixString","useStyles","theme","root","marginTop","spacing","marginBottom","PositionPage","classes","id","item","setItem","response","fetch","headers","Accept","ok","items","json","formatKey","key","attributesList","combinedList","attributes","Object","entries","filter","value","map","index","list","length"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from 'react';\r\n\r\nimport {\r\n  makeStyles, Typography, ListItem, ListItemText, ListItemSecondaryAction, List, Container, Paper, Divider,\r\n} from '@material-ui/core';\r\nimport { useParams } from 'react-router-dom';\r\nimport t from './common/localization';\r\nimport { useEffectAsync } from './reactHelper';\r\nimport MainToolbar from './MainToolbar';\r\nimport { formatPosition } from './common/formatter';\r\nimport { prefixString } from './common/stringUtils';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginTop: theme.spacing(2),\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst PositionPage = () => {\r\n  const classes = useStyles();\r\n\r\n  const { id } = useParams();\r\n\r\n  const [item, setItem] = useState();\r\n\r\n  useEffectAsync(async () => {\r\n    if (id) {\r\n      const response = await fetch(`/api/positions?id=${id}`, {\r\n        headers: {\r\n          Accept: 'application/json',\r\n        },\r\n      });\r\n      if (response.ok) {\r\n        const items = await response.json();\r\n        setItem(items[0]);\r\n      }\r\n    } else {\r\n      setItem({});\r\n    }\r\n  }, [id]);\r\n\r\n  const formatKey = (key) => t(prefixString('position', key)) || `${t('sharedAttribute')} \"${key}\"`;\r\n\r\n  const attributesList = () => {\r\n    const combinedList = { ...item, ...item.attributes };\r\n    return Object.entries(combinedList).filter(([, value]) => typeof value !== 'object');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <MainToolbar />\r\n      <Container maxWidth=\"sm\" className={classes.root}>\r\n        <Paper>\r\n          {item\r\n            && (\r\n            <List>\r\n              {attributesList().map(([key, value], index, list) => (\r\n                <Fragment key={key}>\r\n                  <ListItem>\r\n                    <ListItemText\r\n                      primary={formatKey(key)}\r\n                    />\r\n                    <ListItemSecondaryAction>\r\n                      <Typography variant=\"body2\">\r\n                        {formatPosition(value, key)}\r\n                      </Typography>\r\n                    </ListItemSecondaryAction>\r\n                  </ListItem>\r\n                  {index < list.length - 1 ? <Divider /> : null}\r\n                </Fragment>\r\n              ))}\r\n            </List>\r\n            )}\r\n        </Paper>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PositionPage;\r\n"]},"metadata":{},"sourceType":"module"}