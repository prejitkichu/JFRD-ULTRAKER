{"ast":null,"code":"var _jsxFileName = \"D:\\\\Personal_Projects\\\\Vehicle Tracking\\\\Development2.0\\\\JFRD-ULTRAKER\\\\traccar-web\\\\modern\\\\src\\\\MainPage.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { makeStyles, Paper, Toolbar, TextField, IconButton, Button } from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport AddIcon from '@material-ui/icons/Add';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport ListIcon from '@material-ui/icons/ViewList';\nimport DevicesList from './DevicesList';\nimport Map from './map/Map';\nimport SelectedDeviceMap from './map/SelectedDeviceMap';\nimport AccuracyMap from './map/AccuracyMap';\nimport GeofenceMap from './map/GeofenceMap';\nimport CurrentPositionsMap from './map/CurrentPositionsMap';\nimport CurrentLocationMap from './map/CurrentLocationMap';\nimport BottomNav from './components/BottomNav';\nimport t from './common/localization';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100vh'\n  },\n  sidebar: {\n    display: 'flex',\n    flexDirection: 'column',\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    margin: theme.spacing(1.5),\n    width: theme.dimensions.drawerWidthDesktop,\n    bottom: theme.spacing(8),\n    zIndex: 1301,\n    transition: 'transform .5s ease',\n    backgroundColor: 'white',\n    [theme.breakpoints.down('md')]: {\n      width: '100%',\n      margin: 0\n    }\n  },\n  sidebarCollapsed: {\n    transform: `translateX(-${theme.dimensions.drawerWidthDesktop})`,\n    marginLeft: 0,\n    [theme.breakpoints.down('md')]: {\n      transform: 'translateX(-100vw)'\n    }\n  },\n  paper: {\n    zIndex: 1\n  },\n  toolbar: {\n    display: 'flex',\n    padding: theme.spacing(0, 1),\n    '& > *': {\n      margin: theme.spacing(0, 1)\n    }\n  },\n  deviceList: {\n    flex: 1\n  },\n  sidebarToggle: {\n    position: 'absolute',\n    left: theme.spacing(1.5),\n    top: theme.spacing(3),\n    borderRadius: '0px',\n    minWidth: 0,\n    [theme.breakpoints.down('md')]: {\n      left: 0\n    }\n  },\n  sidebarToggleText: {\n    marginLeft: theme.spacing(1),\n    [theme.breakpoints.only('xs')]: {\n      display: 'none'\n    }\n  },\n  sidebarToggleBg: {\n    backgroundColor: 'white',\n    color: '#777777',\n    '&:hover': {\n      backgroundColor: 'white'\n    }\n  }\n}));\n\nconst MainPage = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const theme = useTheme();\n  const isTablet = useMediaQuery(theme.breakpoints.down('md'));\n  const isPhone = useMediaQuery(theme.breakpoints.down('xs'));\n  const [deviceName, setDeviceName] = useState('');\n  const [collapsed, setCollapsed] = useState(false);\n\n  const handleClose = () => {\n    setCollapsed(!collapsed);\n  }; // Collapse sidebar for tablets and phones\n\n\n  useEffect(() => {\n    setCollapsed(isTablet);\n  }, [isTablet]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Map, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CurrentLocationMap, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(GeofenceMap, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(AccuracyMap, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CurrentPositionsMap, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(SelectedDeviceMap, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: isPhone ? 'secondary' : 'primary',\n    classes: {\n      containedPrimary: classes.sidebarToggleBg\n    },\n    className: classes.sidebarToggle,\n    onClick: handleClose,\n    disableElevation: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ListIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.sidebarToggleText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, t('deviceTitle'))), /*#__PURE__*/React.createElement(Paper, {\n    elevation: 3,\n    className: `${classes.sidebar} ${collapsed && classes.sidebarCollapsed}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    square: true,\n    elevation: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    className: classes.toolbar,\n    disableGutters: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }, isTablet && /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ArrowBackIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    name: \"deviceName\",\n    value: deviceName,\n    autoComplete: \"deviceName\",\n    autoFocus: true,\n    onChange: event => setDeviceName(event.target.value),\n    placeholder: \"Search Devices\",\n    variant: \"filled\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(IconButton, {\n    onClick: () => history.push('/device'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 15\n    }\n  })), !isTablet && /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CloseIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.deviceList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DevicesList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(BottomNav, {\n    showOnDesktop: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default MainPage;","map":{"version":3,"sources":["D:/Personal_Projects/Vehicle Tracking/Development2.0/JFRD-ULTRAKER/traccar-web/modern/src/MainPage.js"],"names":["React","useState","useEffect","useHistory","makeStyles","Paper","Toolbar","TextField","IconButton","Button","useTheme","useMediaQuery","AddIcon","CloseIcon","ArrowBackIcon","ListIcon","DevicesList","Map","SelectedDeviceMap","AccuracyMap","GeofenceMap","CurrentPositionsMap","CurrentLocationMap","BottomNav","t","useStyles","theme","root","height","sidebar","display","flexDirection","position","left","top","margin","spacing","width","dimensions","drawerWidthDesktop","bottom","zIndex","transition","backgroundColor","breakpoints","down","sidebarCollapsed","transform","marginLeft","paper","toolbar","padding","deviceList","flex","sidebarToggle","borderRadius","minWidth","sidebarToggleText","only","sidebarToggleBg","color","MainPage","classes","history","isTablet","isPhone","deviceName","setDeviceName","collapsed","setCollapsed","handleClose","containedPrimary","event","target","value","push"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {\r\n  makeStyles, Paper, Toolbar, TextField, IconButton, Button,\r\n} from '@material-ui/core';\r\n\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport ListIcon from '@material-ui/icons/ViewList';\r\n\r\nimport DevicesList from './DevicesList';\r\nimport Map from './map/Map';\r\nimport SelectedDeviceMap from './map/SelectedDeviceMap';\r\nimport AccuracyMap from './map/AccuracyMap';\r\nimport GeofenceMap from './map/GeofenceMap';\r\nimport CurrentPositionsMap from './map/CurrentPositionsMap';\r\nimport CurrentLocationMap from './map/CurrentLocationMap';\r\nimport BottomNav from './components/BottomNav';\r\nimport t from './common/localization';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100vh',\r\n  },\r\n  sidebar: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    position: 'absolute',\r\n    left: 0,\r\n    top: 0,\r\n    margin: theme.spacing(1.5),\r\n    width: theme.dimensions.drawerWidthDesktop,\r\n    bottom: theme.spacing(8),\r\n    zIndex: 1301,\r\n    transition: 'transform .5s ease',\r\n    backgroundColor: 'white',\r\n    [theme.breakpoints.down('md')]: {\r\n      width: '100%',\r\n      margin: 0,\r\n    },\r\n  },\r\n  sidebarCollapsed: {\r\n    transform: `translateX(-${theme.dimensions.drawerWidthDesktop})`,\r\n    marginLeft: 0,\r\n    [theme.breakpoints.down('md')]: {\r\n      transform: 'translateX(-100vw)',\r\n    },\r\n  },\r\n  paper: {\r\n    zIndex: 1,\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    padding: theme.spacing(0, 1),\r\n    '& > *': {\r\n      margin: theme.spacing(0, 1),\r\n    },\r\n  },\r\n  deviceList: {\r\n    flex: 1,\r\n  },\r\n  sidebarToggle: {\r\n    position: 'absolute',\r\n    left: theme.spacing(1.5),\r\n    top: theme.spacing(3),\r\n    borderRadius: '0px',\r\n    minWidth: 0,\r\n    [theme.breakpoints.down('md')]: {\r\n      left: 0,\r\n    },\r\n  },\r\n  sidebarToggleText: {\r\n    marginLeft: theme.spacing(1),\r\n    [theme.breakpoints.only('xs')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  sidebarToggleBg: {\r\n    backgroundColor: 'white',\r\n    color: '#777777',\r\n    '&:hover': {\r\n      backgroundColor: 'white',\r\n    },\r\n  },\r\n}));\r\n\r\nconst MainPage = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const theme = useTheme();\r\n\r\n  const isTablet = useMediaQuery(theme.breakpoints.down('md'));\r\n  const isPhone = useMediaQuery(theme.breakpoints.down('xs'));\r\n\r\n  const [deviceName, setDeviceName] = useState('');\r\n  const [collapsed, setCollapsed] = useState(false);\r\n\r\n  const handleClose = () => {\r\n    setCollapsed(!collapsed);\r\n  };\r\n\r\n  // Collapse sidebar for tablets and phones\r\n  useEffect(() => {\r\n    setCollapsed(isTablet);\r\n  }, [isTablet]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Map>\r\n        <CurrentLocationMap />\r\n        <GeofenceMap />\r\n        <AccuracyMap />\r\n        <CurrentPositionsMap />\r\n        <SelectedDeviceMap />\r\n      </Map>\r\n      <Button\r\n        variant=\"contained\"\r\n        color={isPhone ? 'secondary' : 'primary'}\r\n        classes={{ containedPrimary: classes.sidebarToggleBg }}\r\n        className={classes.sidebarToggle}\r\n        onClick={handleClose}\r\n        disableElevation\r\n      >\r\n        <ListIcon />\r\n        <div className={classes.sidebarToggleText}>{t('deviceTitle')}</div>\r\n      </Button>\r\n      <Paper elevation={3} className={`${classes.sidebar} ${collapsed && classes.sidebarCollapsed}`}>\r\n        <Paper className={classes.paper} square elevation={3}>\r\n          <Toolbar className={classes.toolbar} disableGutters>\r\n            {isTablet && (\r\n            <IconButton onClick={handleClose}>\r\n              <ArrowBackIcon />\r\n            </IconButton>\r\n            )}\r\n            <TextField\r\n              fullWidth\r\n              name=\"deviceName\"\r\n              value={deviceName}\r\n              autoComplete=\"deviceName\"\r\n              autoFocus\r\n              onChange={(event) => setDeviceName(event.target.value)}\r\n              placeholder=\"Search Devices\"\r\n              variant=\"filled\"\r\n            />\r\n            <IconButton onClick={() => history.push('/device')}>\r\n              <AddIcon />\r\n            </IconButton>\r\n            {!isTablet && (\r\n            <IconButton onClick={handleClose}>\r\n              <CloseIcon />\r\n            </IconButton>\r\n            )}\r\n          </Toolbar>\r\n        </Paper>\r\n        <div className={classes.deviceList}>\r\n          <DevicesList />\r\n        </div>\r\n      </Paper>\r\n\r\n      <BottomNav showOnDesktop />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n"]},"metadata":{},"sourceType":"module"}