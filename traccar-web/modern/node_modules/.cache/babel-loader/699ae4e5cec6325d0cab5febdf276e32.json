{"ast":null,"code":"import { useSelector } from 'react-redux';\nexport const usePreference = (key, defaultValue) => useSelector(state => {\n  if (state.session.server.forceSettings) {\n    return state.session.server[key] || state.session.user[key] || defaultValue;\n  }\n\n  return state.session.user[key] || state.session.server[key] || defaultValue;\n});\nexport const useAttributePreference = (key, defaultValue) => useSelector(state => {\n  if (state.session.server.forceSettings) {\n    return state.session.server.attributes[key] || state.session.user.attributes[key] || defaultValue;\n  }\n\n  return state.session.user.attributes[key] || state.session.server.attributes[key] || defaultValue;\n});","map":{"version":3,"sources":["D:/Personal_Projects/Vehicle Tracking/Development2.0/JFRD-ULTRAKER/traccar-web/modern/src/common/preferences.js"],"names":["useSelector","usePreference","key","defaultValue","state","session","server","forceSettings","user","useAttributePreference","attributes"],"mappings":"AAAA,SAASA,WAAT,QAA4B,aAA5B;AAEA,OAAO,MAAMC,aAAa,GAAG,CAACC,GAAD,EAAMC,YAAN,KAAuBH,WAAW,CAAEI,KAAD,IAAW;AACzE,MAAIA,KAAK,CAACC,OAAN,CAAcC,MAAd,CAAqBC,aAAzB,EAAwC;AACtC,WAAOH,KAAK,CAACC,OAAN,CAAcC,MAAd,CAAqBJ,GAArB,KAA6BE,KAAK,CAACC,OAAN,CAAcG,IAAd,CAAmBN,GAAnB,CAA7B,IAAwDC,YAA/D;AACD;;AACD,SAAOC,KAAK,CAACC,OAAN,CAAcG,IAAd,CAAmBN,GAAnB,KAA2BE,KAAK,CAACC,OAAN,CAAcC,MAAd,CAAqBJ,GAArB,CAA3B,IAAwDC,YAA/D;AACD,CAL8D,CAAxD;AAOP,OAAO,MAAMM,sBAAsB,GAAG,CAACP,GAAD,EAAMC,YAAN,KAAuBH,WAAW,CAAEI,KAAD,IAAW;AAClF,MAAIA,KAAK,CAACC,OAAN,CAAcC,MAAd,CAAqBC,aAAzB,EAAwC;AACtC,WAAOH,KAAK,CAACC,OAAN,CAAcC,MAAd,CAAqBI,UAArB,CAAgCR,GAAhC,KAAwCE,KAAK,CAACC,OAAN,CAAcG,IAAd,CAAmBE,UAAnB,CAA8BR,GAA9B,CAAxC,IAA8EC,YAArF;AACD;;AACD,SAAOC,KAAK,CAACC,OAAN,CAAcG,IAAd,CAAmBE,UAAnB,CAA8BR,GAA9B,KAAsCE,KAAK,CAACC,OAAN,CAAcC,MAAd,CAAqBI,UAArB,CAAgCR,GAAhC,CAAtC,IAA8EC,YAArF;AACD,CALuE,CAAjE","sourcesContent":["import { useSelector } from 'react-redux';\r\n\r\nexport const usePreference = (key, defaultValue) => useSelector((state) => {\r\n  if (state.session.server.forceSettings) {\r\n    return state.session.server[key] || state.session.user[key] || defaultValue;\r\n  }\r\n  return state.session.user[key] || state.session.server[key] || defaultValue;\r\n});\r\n\r\nexport const useAttributePreference = (key, defaultValue) => useSelector((state) => {\r\n  if (state.session.server.forceSettings) {\r\n    return state.session.server.attributes[key] || state.session.user.attributes[key] || defaultValue;\r\n  }\r\n  return state.session.user.attributes[key] || state.session.server.attributes[key] || defaultValue;\r\n});\r\n"]},"metadata":{},"sourceType":"module"}