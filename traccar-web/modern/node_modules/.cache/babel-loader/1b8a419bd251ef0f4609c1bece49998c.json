{"ast":null,"code":"var _jsxFileName = \"D:\\\\Personal_Projects\\\\Vehicle Tracking\\\\Development2.0\\\\JFRD-ULTRAKER\\\\traccar-web\\\\modern\\\\src\\\\components\\\\registration\\\\RegisterForm.js\";\nimport React, { useState } from 'react';\nimport { Grid, Button, TextField, Typography, Link, makeStyles, Snackbar } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport StartPage from '../../StartPage';\nimport t from '../../common/localization';\nconst useStyles = makeStyles(theme => ({\n  register: {\n    fontSize: theme.spacing(3),\n    fontWeight: 500,\n    marginLeft: theme.spacing(2),\n    textTransform: 'uppercase'\n  },\n  link: {\n    fontSize: theme.spacing(3),\n    fontWeight: 500,\n    marginTop: theme.spacing(0.5),\n    cursor: 'pointer'\n  }\n}));\n\nconst RegisterForm = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n\n  const submitDisabled = () => !name || !/(.+)@(.+)\\.(.{2,})/.test(email) || !password;\n\n  const handleRegister = async () => {\n    const response = await fetch('/api/users', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name,\n        email,\n        password\n      })\n    });\n\n    if (response.ok) {\n      setSnackbarOpen(true);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(StartPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Snackbar, {\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'center'\n    },\n    open: snackbarOpen,\n    onClose: () => history.push('/login'),\n    autoHideDuration: 6000,\n    message: t('loginCreated'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.link,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    onClick: () => history.push('/login'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ArrowBackIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.register,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, t('loginRegister')))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    fullWidth: true,\n    label: t('sharedName'),\n    name: \"name\",\n    value: name || '',\n    autoComplete: \"name\",\n    autoFocus: true,\n    onChange: event => setName(event.target.value),\n    variant: \"filled\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    fullWidth: true,\n    type: \"email\",\n    label: t('userEmail'),\n    name: \"email\",\n    value: email || '',\n    autoComplete: \"email\",\n    onChange: event => setEmail(event.target.value),\n    variant: \"filled\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    fullWidth: true,\n    label: t('userPassword'),\n    name: \"password\",\n    value: password || '',\n    type: \"password\",\n    autoComplete: \"current-password\",\n    onChange: event => setPassword(event.target.value),\n    variant: \"filled\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    onClick: handleRegister,\n    disabled: submitDisabled(),\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, t('loginRegister')))));\n};\n\nexport default RegisterForm;","map":{"version":3,"sources":["D:/Personal_Projects/Vehicle Tracking/Development2.0/JFRD-ULTRAKER/traccar-web/modern/src/components/registration/RegisterForm.js"],"names":["React","useState","Grid","Button","TextField","Typography","Link","makeStyles","Snackbar","useHistory","ArrowBackIcon","StartPage","t","useStyles","theme","register","fontSize","spacing","fontWeight","marginLeft","textTransform","link","marginTop","cursor","RegisterForm","classes","history","name","setName","email","setEmail","password","setPassword","snackbarOpen","setSnackbarOpen","submitDisabled","test","handleRegister","response","fetch","method","headers","body","JSON","stringify","ok","vertical","horizontal","push","event","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  Grid, Button, TextField, Typography, Link, makeStyles, Snackbar,\r\n} from '@material-ui/core';\r\nimport { useHistory } from 'react-router-dom';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport StartPage from '../../StartPage';\r\nimport t from '../../common/localization';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  register: {\r\n    fontSize: theme.spacing(3),\r\n    fontWeight: 500,\r\n    marginLeft: theme.spacing(2),\r\n    textTransform: 'uppercase',\r\n  },\r\n  link: {\r\n    fontSize: theme.spacing(3),\r\n    fontWeight: 500,\r\n    marginTop: theme.spacing(0.5),\r\n    cursor: 'pointer',\r\n  },\r\n}));\r\n\r\nconst RegisterForm = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\r\n\r\n  const submitDisabled = () => !name || !/(.+)@(.+)\\.(.{2,})/.test(email) || !password;\r\n\r\n  const handleRegister = async () => {\r\n    const response = await fetch('/api/users', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ name, email, password }),\r\n    });\r\n\r\n    if (response.ok) {\r\n      setSnackbarOpen(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <StartPage>\r\n      <Snackbar\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n        open={snackbarOpen}\r\n        onClose={() => history.push('/login')}\r\n        autoHideDuration={6000}\r\n        message={t('loginCreated')}\r\n      />\r\n      <Grid container direction=\"column\" spacing={2}>\r\n        <Grid container item>\r\n          <Grid item>\r\n            <Typography className={classes.link} color=\"primary\">\r\n              <Link onClick={() => history.push('/login')}>\r\n                <ArrowBackIcon />\r\n              </Link>\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs>\r\n            <Typography className={classes.register} color=\"primary\">\r\n              {t('loginRegister')}\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n          <TextField\r\n            required\r\n            fullWidth\r\n            label={t('sharedName')}\r\n            name=\"name\"\r\n            value={name || ''}\r\n            autoComplete=\"name\"\r\n            autoFocus\r\n            onChange={(event) => setName(event.target.value)}\r\n            variant=\"filled\"\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <TextField\r\n            required\r\n            fullWidth\r\n            type=\"email\"\r\n            label={t('userEmail')}\r\n            name=\"email\"\r\n            value={email || ''}\r\n            autoComplete=\"email\"\r\n            onChange={(event) => setEmail(event.target.value)}\r\n            variant=\"filled\"\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <TextField\r\n            required\r\n            fullWidth\r\n            label={t('userPassword')}\r\n            name=\"password\"\r\n            value={password || ''}\r\n            type=\"password\"\r\n            autoComplete=\"current-password\"\r\n            onChange={(event) => setPassword(event.target.value)}\r\n            variant=\"filled\"\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            onClick={handleRegister}\r\n            disabled={submitDisabled()}\r\n            fullWidth\r\n          >\r\n            {t('loginRegister')}\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </StartPage>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n"]},"metadata":{},"sourceType":"module"}