{"ast":null,"code":"var _jsxFileName = \"D:\\\\Personal_Projects\\\\Vehicle Tracking\\\\Development2.0\\\\JFRD-ULTRAKER\\\\traccar-web\\\\modern\\\\src\\\\GeofencesList.js\";\nimport React, { Fragment } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { devicesActions } from './store';\nimport EditCollectionView from './EditCollectionView';\nconst useStyles = makeStyles(() => ({\n  list: {\n    maxHeight: '100%',\n    overflow: 'auto'\n  },\n  icon: {\n    width: '25px',\n    height: '25px',\n    filter: 'brightness(0) invert(1)'\n  }\n}));\n\nconst GeofenceView = _ref => {\n  let {\n    onMenuClick\n  } = _ref;\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const items = useSelector(state => Object.values(state.geofences.items));\n  return /*#__PURE__*/React.createElement(List, {\n    className: classes.list,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, items.map((item, index, list) => /*#__PURE__*/React.createElement(Fragment, {\n    key: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    key: item.id,\n    onClick: () => dispatch(devicesActions.select(item)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    primary: item.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ListItemSecondaryAction, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: event => onMenuClick(event.currentTarget, item.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(MoreVertIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  })))), index < list.length - 1 ? /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 38\n    }\n  }) : null)));\n};\n\nconst GeofencesList = () => /*#__PURE__*/React.createElement(EditCollectionView, {\n  content: GeofenceView,\n  editPath: \"/geofence\",\n  endpoint: \"geofences\",\n  disableAdd: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 3\n  }\n});\n\nexport default GeofencesList;","map":{"version":3,"sources":["D:/Personal_Projects/Vehicle Tracking/Development2.0/JFRD-ULTRAKER/traccar-web/modern/src/GeofencesList.js"],"names":["React","Fragment","useDispatch","useSelector","makeStyles","Divider","IconButton","List","ListItem","ListItemSecondaryAction","ListItemText","MoreVertIcon","devicesActions","EditCollectionView","useStyles","list","maxHeight","overflow","icon","width","height","filter","GeofenceView","onMenuClick","classes","dispatch","items","state","Object","values","geofences","map","item","index","id","select","name","event","currentTarget","length","GeofencesList"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n\r\nimport { devicesActions } from './store';\r\nimport EditCollectionView from './EditCollectionView';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  list: {\r\n    maxHeight: '100%',\r\n    overflow: 'auto',\r\n  },\r\n  icon: {\r\n    width: '25px',\r\n    height: '25px',\r\n    filter: 'brightness(0) invert(1)',\r\n  },\r\n}));\r\n\r\nconst GeofenceView = ({ onMenuClick }) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const items = useSelector((state) => Object.values(state.geofences.items));\r\n\r\n  return (\r\n    <List className={classes.list}>\r\n      {items.map((item, index, list) => (\r\n        <Fragment key={item.id}>\r\n          <ListItem button key={item.id} onClick={() => dispatch(devicesActions.select(item))}>\r\n            <ListItemText primary={item.name} />\r\n            <ListItemSecondaryAction>\r\n              <IconButton onClick={(event) => onMenuClick(event.currentTarget, item.id)}>\r\n                <MoreVertIcon />\r\n              </IconButton>\r\n            </ListItemSecondaryAction>\r\n          </ListItem>\r\n          {index < list.length - 1 ? <Divider /> : null}\r\n        </Fragment>\r\n      ))}\r\n    </List>\r\n  );\r\n};\r\n\r\nconst GeofencesList = () => (\r\n  <EditCollectionView content={GeofenceView} editPath=\"/geofence\" endpoint=\"geofences\" disableAdd />\r\n);\r\n\r\nexport default GeofencesList;\r\n"]},"metadata":{},"sourceType":"module"}