{"ast":null,"code":"var _jsxFileName = \"D:\\\\Personal_Projects\\\\Vehicle Tracking\\\\Development2.0\\\\JFRD-ULTRAKER\\\\traccar-web\\\\modern\\\\src\\\\reports\\\\Graph.js\";\nimport React from 'react';\nimport { withWidth } from '@material-ui/core';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\n\nconst CustomizedAxisTick = _ref => {\n  let {\n    x,\n    y,\n    payload\n  } = _ref;\n\n  if (!payload.value) {\n    return payload.value;\n  }\n\n  const parts = payload.value.split(' ');\n  return /*#__PURE__*/React.createElement(\"g\", {\n    transform: `translate(${x},${y})`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"text\", {\n    x: 0,\n    y: 0,\n    dy: 16,\n    textAnchor: \"end\",\n    fill: \"#666\",\n    transform: \"rotate(-35)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, parts[0]), /*#__PURE__*/React.createElement(\"text\", {\n    x: 0,\n    y: 16,\n    dy: 16,\n    textAnchor: \"end\",\n    fill: \"#666\",\n    transform: \"rotate(-35)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, parts[1]));\n};\n\nconst Graph = _ref2 => {\n  let {\n    type,\n    items\n  } = _ref2;\n  return /*#__PURE__*/React.createElement(ResponsiveContainer, {\n    height: 400,\n    width: \"100%\",\n    debounce: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(LineChart, {\n    data: items,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: \"fixTime\",\n    tick: /*#__PURE__*/React.createElement(CustomizedAxisTick, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 38\n      }\n    }),\n    height: 60,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(YAxis, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CartesianGrid, {\n    strokeDasharray: \"3 3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Legend, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Line, {\n    type: \"natural\",\n    dataKey: type,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  })));\n};\n\nexport default withWidth()(Graph);","map":{"version":3,"sources":["D:/Personal_Projects/Vehicle Tracking/Development2.0/JFRD-ULTRAKER/traccar-web/modern/src/reports/Graph.js"],"names":["React","withWidth","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","CustomizedAxisTick","x","y","payload","value","parts","split","Graph","type","items"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,SACEC,SADF,EACaC,IADb,EACmBC,KADnB,EAC0BC,KAD1B,EACiCC,aADjC,EACgDC,OADhD,EACyDC,MADzD,EACiEC,mBADjE,QAEO,UAFP;;AAIA,MAAMC,kBAAkB,GAAG,QAAuB;AAAA,MAAtB;AAAEC,IAAAA,CAAF;AAAKC,IAAAA,CAAL;AAAQC,IAAAA;AAAR,GAAsB;;AAChD,MAAI,CAACA,OAAO,CAACC,KAAb,EAAoB;AAClB,WAAOD,OAAO,CAACC,KAAf;AACD;;AACD,QAAMC,KAAK,GAAGF,OAAO,CAACC,KAAR,CAAcE,KAAd,CAAoB,GAApB,CAAd;AACA,sBACE;AAAG,IAAA,SAAS,EAAG,aAAYL,CAAE,IAAGC,CAAE,GAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,CAAC,EAAE,CAAT;AAAY,IAAA,CAAC,EAAE,CAAf;AAAkB,IAAA,EAAE,EAAE,EAAtB;AAA0B,IAAA,UAAU,EAAC,KAArC;AAA2C,IAAA,IAAI,EAAC,MAAhD;AAAuD,IAAA,SAAS,EAAC,aAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgFG,KAAK,CAAC,CAAD,CAArF,CADF,eAEE;AAAM,IAAA,CAAC,EAAE,CAAT;AAAY,IAAA,CAAC,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,EAAvB;AAA2B,IAAA,UAAU,EAAC,KAAtC;AAA4C,IAAA,IAAI,EAAC,MAAjD;AAAwD,IAAA,SAAS,EAAC,aAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiFA,KAAK,CAAC,CAAD,CAAtF,CAFF,CADF;AAMD,CAXD;;AAaA,MAAME,KAAK,GAAG;AAAA,MAAC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAD;AAAA,sBACZ,oBAAC,mBAAD;AAAqB,IAAA,MAAM,EAAE,GAA7B;AAAkC,IAAA,KAAK,EAAC,MAAxC;AAA+C,IAAA,QAAQ,EAAE,CAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAEA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAC,SAAf;AAAyB,IAAA,IAAI,eAAE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA/B;AAAuD,IAAA,MAAM,EAAE,EAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,aAAD;AAAe,IAAA,eAAe,EAAC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAIE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAKE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,eAME,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,SAAX;AAAqB,IAAA,OAAO,EAAED,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF,CADY;AAAA,CAAd;;AAaA,eAAejB,SAAS,GAAGgB,KAAH,CAAxB","sourcesContent":["import React from 'react';\r\nimport { withWidth } from '@material-ui/core';\r\nimport {\r\n  LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer,\r\n} from 'recharts';\r\n\r\nconst CustomizedAxisTick = ({ x, y, payload }) => {\r\n  if (!payload.value) {\r\n    return payload.value;\r\n  }\r\n  const parts = payload.value.split(' ');\r\n  return (\r\n    <g transform={`translate(${x},${y})`}>\r\n      <text x={0} y={0} dy={16} textAnchor=\"end\" fill=\"#666\" transform=\"rotate(-35)\">{parts[0]}</text>\r\n      <text x={0} y={16} dy={16} textAnchor=\"end\" fill=\"#666\" transform=\"rotate(-35)\">{parts[1]}</text>\r\n    </g>\r\n  );\r\n};\r\n\r\nconst Graph = ({ type, items }) => (\r\n  <ResponsiveContainer height={400} width=\"100%\" debounce={1}>\r\n    <LineChart data={items}>\r\n      <XAxis dataKey=\"fixTime\" tick={<CustomizedAxisTick />} height={60} />\r\n      <YAxis />\r\n      <CartesianGrid strokeDasharray=\"3 3\" />\r\n      <Tooltip />\r\n      <Legend />\r\n      <Line type=\"natural\" dataKey={type} />\r\n    </LineChart>\r\n  </ResponsiveContainer>\r\n);\r\n\r\nexport default withWidth()(Graph);\r\n"]},"metadata":{},"sourceType":"module"}