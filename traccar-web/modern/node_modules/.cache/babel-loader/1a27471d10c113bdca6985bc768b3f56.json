{"ast":null,"code":"var _jsxFileName = \"D:\\\\Personal_Projects\\\\Vehicle Tracking\\\\Development2.0\\\\JFRD-ULTRAKER\\\\traccar-web\\\\modern\\\\src\\\\EditItemView.js\";\nimport React from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\nimport FormControl from '@material-ui/core/FormControl';\nimport t from './common/localization';\nimport { useEffectAsync } from './reactHelper';\nimport OptionsLayout from './settings/OptionsLayout';\nconst useStyles = makeStyles(theme => ({\n  container: {\n    marginTop: theme.spacing(2)\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'space-evenly',\n    '& > *': {\n      flexBasis: '33%'\n    }\n  }\n}));\n\nconst EditItemView = _ref => {\n  let {\n    children,\n    endpoint,\n    item,\n    setItem\n  } = _ref;\n  const history = useHistory();\n  const classes = useStyles();\n  const {\n    id\n  } = useParams();\n  useEffectAsync(async () => {\n    if (id) {\n      const response = await fetch(`/api/${endpoint}/${id}`);\n\n      if (response.ok) {\n        setItem(await response.json());\n      }\n    } else {\n      setItem({});\n    }\n  }, [id]);\n\n  const handleSave = async () => {\n    let url = `/api/${endpoint}`;\n\n    if (id) {\n      url += `/${id}`;\n    }\n\n    const response = await fetch(url, {\n      method: !id ? 'POST' : 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(item)\n    });\n\n    if (response.ok) {\n      history.goBack();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(OptionsLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    maxWidth: \"xs\",\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, children, /*#__PURE__*/React.createElement(FormControl, {\n    fullWidth: true,\n    margin: \"normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.buttons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    color: \"primary\",\n    variant: \"outlined\",\n    onClick: () => history.goBack(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, t('sharedCancel')), /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    color: \"primary\",\n    variant: \"contained\",\n    onClick: handleSave,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, t('sharedSave'))))));\n};\n\nexport default EditItemView;","map":{"version":3,"sources":["D:/Personal_Projects/Vehicle Tracking/Development2.0/JFRD-ULTRAKER/traccar-web/modern/src/EditItemView.js"],"names":["React","useHistory","useParams","makeStyles","Container","Button","FormControl","t","useEffectAsync","OptionsLayout","useStyles","theme","container","marginTop","spacing","buttons","display","justifyContent","flexBasis","EditItemView","children","endpoint","item","setItem","history","classes","id","response","fetch","ok","json","handleSave","url","method","headers","body","JSON","stringify","goBack"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\nimport t from './common/localization';\r\nimport { useEffectAsync } from './reactHelper';\r\nimport OptionsLayout from './settings/OptionsLayout';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  buttons: {\r\n    display: 'flex',\r\n    justifyContent: 'space-evenly',\r\n    '& > *': {\r\n      flexBasis: '33%',\r\n    },\r\n  },\r\n}));\r\n\r\nconst EditItemView = ({\r\n  children, endpoint, item, setItem,\r\n}) => {\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const { id } = useParams();\r\n\r\n  useEffectAsync(async () => {\r\n    if (id) {\r\n      const response = await fetch(`/api/${endpoint}/${id}`);\r\n      if (response.ok) {\r\n        setItem(await response.json());\r\n      }\r\n    } else {\r\n      setItem({});\r\n    }\r\n  }, [id]);\r\n\r\n  const handleSave = async () => {\r\n    let url = `/api/${endpoint}`;\r\n    if (id) {\r\n      url += `/${id}`;\r\n    }\r\n\r\n    const response = await fetch(url, {\r\n      method: !id ? 'POST' : 'PUT',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(item),\r\n    });\r\n\r\n    if (response.ok) {\r\n      history.goBack();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <OptionsLayout>\r\n      <Container maxWidth=\"xs\" className={classes.container}>\r\n        {children}\r\n        <FormControl fullWidth margin=\"normal\">\r\n          <div className={classes.buttons}>\r\n            <Button type=\"button\" color=\"primary\" variant=\"outlined\" onClick={() => history.goBack()}>\r\n              {t('sharedCancel')}\r\n            </Button>\r\n            <Button type=\"button\" color=\"primary\" variant=\"contained\" onClick={handleSave}>\r\n              {t('sharedSave')}\r\n            </Button>\r\n          </div>\r\n        </FormControl>\r\n      </Container>\r\n    </OptionsLayout>\r\n  );\r\n};\r\n\r\nexport default EditItemView;\r\n"]},"metadata":{},"sourceType":"module"}