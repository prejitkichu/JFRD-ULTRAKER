{"ast":null,"code":"import af from '../../../web/l10n/af.json';\nimport ar from '../../../web/l10n/ar.json';\nimport az from '../../../web/l10n/az.json';\nimport bg from '../../../web/l10n/bg.json';\nimport bn from '../../../web/l10n/bn.json';\nimport cs from '../../../web/l10n/cs.json';\nimport da from '../../../web/l10n/da.json';\nimport de from '../../../web/l10n/de.json';\nimport el from '../../../web/l10n/el.json';\nimport en from '../../../web/l10n/en.json';\nimport es from '../../../web/l10n/es.json';\nimport fa from '../../../web/l10n/fa.json';\nimport fi from '../../../web/l10n/fi.json';\nimport fr from '../../../web/l10n/fr.json';\nimport he from '../../../web/l10n/he.json';\nimport hi from '../../../web/l10n/hi.json';\nimport hr from '../../../web/l10n/hr.json';\nimport hu from '../../../web/l10n/hu.json';\nimport id from '../../../web/l10n/id.json';\nimport it from '../../../web/l10n/it.json';\nimport ja from '../../../web/l10n/ja.json';\nimport ka from '../../../web/l10n/ka.json';\nimport kk from '../../../web/l10n/kk.json';\nimport km from '../../../web/l10n/km.json';\nimport ko from '../../../web/l10n/ko.json';\nimport lo from '../../../web/l10n/lo.json';\nimport lt from '../../../web/l10n/lt.json';\nimport lv from '../../../web/l10n/lv.json';\nimport ml from '../../../web/l10n/ml.json';\nimport mn from '../../../web/l10n/mn.json';\nimport ms from '../../../web/l10n/ms.json';\nimport nb from '../../../web/l10n/nb.json';\nimport ne from '../../../web/l10n/ne.json';\nimport nl from '../../../web/l10n/nl.json';\nimport nn from '../../../web/l10n/nn.json';\nimport pl from '../../../web/l10n/pl.json';\nimport pt from '../../../web/l10n/pt.json';\nimport pt_BR from '../../../web/l10n/pt_BR.json';\nimport ro from '../../../web/l10n/ro.json';\nimport ru from '../../../web/l10n/ru.json';\nimport si from '../../../web/l10n/si.json';\nimport sk from '../../../web/l10n/sk.json';\nimport sl from '../../../web/l10n/sl.json';\nimport sq from '../../../web/l10n/sq.json';\nimport sr from '../../../web/l10n/sr.json';\nimport sv from '../../../web/l10n/sv.json';\nimport ta from '../../../web/l10n/ta.json';\nimport th from '../../../web/l10n/th.json';\nimport tr from '../../../web/l10n/tr.json';\nimport uk from '../../../web/l10n/uk.json';\nimport uz from '../../../web/l10n/uz.json';\nimport vi from '../../../web/l10n/vi.json';\nimport zh from '../../../web/l10n/zh.json';\nimport zh_TW from '../../../web/l10n/zh_TW.json';\nconst supportedLanguages = {\n  af: {\n    data: af,\n    name: 'Afrikaans'\n  },\n  ar: {\n    data: ar,\n    name: 'العربية'\n  },\n  az: {\n    data: az,\n    name: 'Azərbaycanca'\n  },\n  bg: {\n    data: bg,\n    name: 'Български'\n  },\n  bn: {\n    data: bn,\n    name: 'বাংলা'\n  },\n  cs: {\n    data: cs,\n    name: 'Čeština'\n  },\n  de: {\n    data: de,\n    name: 'Deutsch'\n  },\n  da: {\n    data: da,\n    name: 'Dansk'\n  },\n  el: {\n    data: el,\n    name: 'Ελληνικά'\n  },\n  en: {\n    data: en,\n    name: 'English'\n  },\n  es: {\n    data: es,\n    name: 'Español'\n  },\n  fa: {\n    data: fa,\n    name: 'فارسی'\n  },\n  fi: {\n    data: fi,\n    name: 'Suomi'\n  },\n  fr: {\n    data: fr,\n    name: 'Français'\n  },\n  he: {\n    data: he,\n    name: 'עברית'\n  },\n  hi: {\n    data: hi,\n    name: 'हिन्दी'\n  },\n  hr: {\n    data: hr,\n    name: 'Hrvatski'\n  },\n  hu: {\n    data: hu,\n    name: 'Magyar'\n  },\n  id: {\n    data: id,\n    name: 'Bahasa Indonesia'\n  },\n  it: {\n    data: it,\n    name: 'Italiano'\n  },\n  ja: {\n    data: ja,\n    name: '日本語'\n  },\n  ka: {\n    data: ka,\n    name: 'ქართული'\n  },\n  kk: {\n    data: kk,\n    name: 'Қазақша'\n  },\n  ko: {\n    data: ko,\n    name: '한국어'\n  },\n  km: {\n    data: km,\n    name: 'ភាសាខ្មែរ'\n  },\n  lo: {\n    data: lo,\n    name: 'ລາວ'\n  },\n  lt: {\n    data: lt,\n    name: 'Lietuvių'\n  },\n  lv: {\n    data: lv,\n    name: 'Latviešu'\n  },\n  ml: {\n    data: ml,\n    name: 'മലയാളം'\n  },\n  mn: {\n    data: mn,\n    name: 'Монгол хэл'\n  },\n  ms: {\n    data: ms,\n    name: 'بهاس ملايو'\n  },\n  nb: {\n    data: nb,\n    name: 'Norsk bokmål'\n  },\n  ne: {\n    data: ne,\n    name: 'नेपाली'\n  },\n  nl: {\n    data: nl,\n    name: 'Nederlands'\n  },\n  nn: {\n    data: nn,\n    name: 'Norsk nynorsk'\n  },\n  pl: {\n    data: pl,\n    name: 'Polski'\n  },\n  pt: {\n    data: pt,\n    name: 'Português'\n  },\n  pt_BR: {\n    data: pt_BR,\n    name: 'Português (Brasil)'\n  },\n  ro: {\n    data: ro,\n    name: 'Română'\n  },\n  ru: {\n    data: ru,\n    name: 'Русский'\n  },\n  si: {\n    data: si,\n    name: 'සිංහල'\n  },\n  sk: {\n    data: sk,\n    name: 'Slovenčina'\n  },\n  sl: {\n    data: sl,\n    name: 'Slovenščina'\n  },\n  sq: {\n    data: sq,\n    name: 'Shqipëria'\n  },\n  sr: {\n    data: sr,\n    name: 'Srpski'\n  },\n  sv: {\n    data: sv,\n    name: 'Svenska'\n  },\n  ta: {\n    data: ta,\n    name: 'தமிழ்'\n  },\n  th: {\n    data: th,\n    name: 'ไทย'\n  },\n  tr: {\n    data: tr,\n    name: 'Türkçe'\n  },\n  uk: {\n    data: uk,\n    name: 'Українська'\n  },\n  uz: {\n    data: uz,\n    name: 'Oʻzbekcha'\n  },\n  vi: {\n    data: vi,\n    name: 'Tiếng Việt'\n  },\n  zh: {\n    data: zh,\n    name: '中文'\n  },\n  zh_TW: {\n    data: zh_TW,\n    name: '中文 (Taiwan)'\n  }\n};\nconst languages = window.navigator.languages !== undefined ? window.navigator.languages.slice() : [];\nlet language = window.navigator.userLanguage || window.navigator.language;\nlanguages.push(language);\nlanguages.push(language.substring(0, 2));\nlanguages.push('en');\n\nfor (let i = 0; i < languages.length; i++) {\n  language = languages[i].replace('-', '_');\n\n  if (language in supportedLanguages) {\n    break;\n  }\n\n  if (language.length > 2) {\n    language = languages[i].substring(0, 2);\n\n    if (language in supportedLanguages) {\n      break;\n    }\n  }\n}\n\nconst selectedLanguage = supportedLanguages[language];\nexport const findStringKeys = predicate => Object.keys(selectedLanguage.data).filter(predicate);\nexport default (key => selectedLanguage.data[key]);","map":{"version":3,"sources":["D:/Personal_Projects/Vehicle Tracking/Development2.0/JFRD-ULTRAKER/traccar-web/modern/src/common/localization.js"],"names":["af","ar","az","bg","bn","cs","da","de","el","en","es","fa","fi","fr","he","hi","hr","hu","id","it","ja","ka","kk","km","ko","lo","lt","lv","ml","mn","ms","nb","ne","nl","nn","pl","pt","pt_BR","ro","ru","si","sk","sl","sq","sr","sv","ta","th","tr","uk","uz","vi","zh","zh_TW","supportedLanguages","data","name","languages","window","navigator","undefined","slice","language","userLanguage","push","substring","i","length","replace","selectedLanguage","findStringKeys","predicate","Object","keys","filter","key"],"mappings":"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","sourcesContent":["import af from '../../../web/l10n/af.json';\r\nimport ar from '../../../web/l10n/ar.json';\r\nimport az from '../../../web/l10n/az.json';\r\nimport bg from '../../../web/l10n/bg.json';\r\nimport bn from '../../../web/l10n/bn.json';\r\nimport cs from '../../../web/l10n/cs.json';\r\nimport da from '../../../web/l10n/da.json';\r\nimport de from '../../../web/l10n/de.json';\r\nimport el from '../../../web/l10n/el.json';\r\nimport en from '../../../web/l10n/en.json';\r\nimport es from '../../../web/l10n/es.json';\r\nimport fa from '../../../web/l10n/fa.json';\r\nimport fi from '../../../web/l10n/fi.json';\r\nimport fr from '../../../web/l10n/fr.json';\r\nimport he from '../../../web/l10n/he.json';\r\nimport hi from '../../../web/l10n/hi.json';\r\nimport hr from '../../../web/l10n/hr.json';\r\nimport hu from '../../../web/l10n/hu.json';\r\nimport id from '../../../web/l10n/id.json';\r\nimport it from '../../../web/l10n/it.json';\r\nimport ja from '../../../web/l10n/ja.json';\r\nimport ka from '../../../web/l10n/ka.json';\r\nimport kk from '../../../web/l10n/kk.json';\r\nimport km from '../../../web/l10n/km.json';\r\nimport ko from '../../../web/l10n/ko.json';\r\nimport lo from '../../../web/l10n/lo.json';\r\nimport lt from '../../../web/l10n/lt.json';\r\nimport lv from '../../../web/l10n/lv.json';\r\nimport ml from '../../../web/l10n/ml.json';\r\nimport mn from '../../../web/l10n/mn.json';\r\nimport ms from '../../../web/l10n/ms.json';\r\nimport nb from '../../../web/l10n/nb.json';\r\nimport ne from '../../../web/l10n/ne.json';\r\nimport nl from '../../../web/l10n/nl.json';\r\nimport nn from '../../../web/l10n/nn.json';\r\nimport pl from '../../../web/l10n/pl.json';\r\nimport pt from '../../../web/l10n/pt.json';\r\nimport pt_BR from '../../../web/l10n/pt_BR.json';\r\nimport ro from '../../../web/l10n/ro.json';\r\nimport ru from '../../../web/l10n/ru.json';\r\nimport si from '../../../web/l10n/si.json';\r\nimport sk from '../../../web/l10n/sk.json';\r\nimport sl from '../../../web/l10n/sl.json';\r\nimport sq from '../../../web/l10n/sq.json';\r\nimport sr from '../../../web/l10n/sr.json';\r\nimport sv from '../../../web/l10n/sv.json';\r\nimport ta from '../../../web/l10n/ta.json';\r\nimport th from '../../../web/l10n/th.json';\r\nimport tr from '../../../web/l10n/tr.json';\r\nimport uk from '../../../web/l10n/uk.json';\r\nimport uz from '../../../web/l10n/uz.json';\r\nimport vi from '../../../web/l10n/vi.json';\r\nimport zh from '../../../web/l10n/zh.json';\r\nimport zh_TW from '../../../web/l10n/zh_TW.json';\r\n\r\nconst supportedLanguages = {\r\n  af: { data: af, name: 'Afrikaans' },\r\n  ar: { data: ar, name: 'العربية' },\r\n  az: { data: az, name: 'Azərbaycanca' },\r\n  bg: { data: bg, name: 'Български' },\r\n  bn: { data: bn, name: 'বাংলা' },\r\n  cs: { data: cs, name: 'Čeština' },\r\n  de: { data: de, name: 'Deutsch' },\r\n  da: { data: da, name: 'Dansk' },\r\n  el: { data: el, name: 'Ελληνικά' },\r\n  en: { data: en, name: 'English' },\r\n  es: { data: es, name: 'Español' },\r\n  fa: { data: fa, name: 'فارسی' },\r\n  fi: { data: fi, name: 'Suomi' },\r\n  fr: { data: fr, name: 'Français' },\r\n  he: { data: he, name: 'עברית' },\r\n  hi: { data: hi, name: 'हिन्दी' },\r\n  hr: { data: hr, name: 'Hrvatski' },\r\n  hu: { data: hu, name: 'Magyar' },\r\n  id: { data: id, name: 'Bahasa Indonesia' },\r\n  it: { data: it, name: 'Italiano' },\r\n  ja: { data: ja, name: '日本語' },\r\n  ka: { data: ka, name: 'ქართული' },\r\n  kk: { data: kk, name: 'Қазақша' },\r\n  ko: { data: ko, name: '한국어' },\r\n  km: { data: km, name: 'ភាសាខ្មែរ' },\r\n  lo: { data: lo, name: 'ລາວ' },\r\n  lt: { data: lt, name: 'Lietuvių' },\r\n  lv: { data: lv, name: 'Latviešu' },\r\n  ml: { data: ml, name: 'മലയാളം' },\r\n  mn: { data: mn, name: 'Монгол хэл' },\r\n  ms: { data: ms, name: 'بهاس ملايو' },\r\n  nb: { data: nb, name: 'Norsk bokmål' },\r\n  ne: { data: ne, name: 'नेपाली' },\r\n  nl: { data: nl, name: 'Nederlands' },\r\n  nn: { data: nn, name: 'Norsk nynorsk' },\r\n  pl: { data: pl, name: 'Polski' },\r\n  pt: { data: pt, name: 'Português' },\r\n  pt_BR: { data: pt_BR, name: 'Português (Brasil)' },\r\n  ro: { data: ro, name: 'Română' },\r\n  ru: { data: ru, name: 'Русский' },\r\n  si: { data: si, name: 'සිංහල' },\r\n  sk: { data: sk, name: 'Slovenčina' },\r\n  sl: { data: sl, name: 'Slovenščina' },\r\n  sq: { data: sq, name: 'Shqipëria' },\r\n  sr: { data: sr, name: 'Srpski' },\r\n  sv: { data: sv, name: 'Svenska' },\r\n  ta: { data: ta, name: 'தமிழ்' },\r\n  th: { data: th, name: 'ไทย' },\r\n  tr: { data: tr, name: 'Türkçe' },\r\n  uk: { data: uk, name: 'Українська' },\r\n  uz: { data: uz, name: 'Oʻzbekcha' },\r\n  vi: { data: vi, name: 'Tiếng Việt' },\r\n  zh: { data: zh, name: '中文' },\r\n  zh_TW: { data: zh_TW, name: '中文 (Taiwan)' },\r\n};\r\n\r\nconst languages = window.navigator.languages !== undefined ? window.navigator.languages.slice() : [];\r\nlet language = window.navigator.userLanguage || window.navigator.language;\r\nlanguages.push(language);\r\nlanguages.push(language.substring(0, 2));\r\nlanguages.push('en');\r\nfor (let i = 0; i < languages.length; i++) {\r\n  language = languages[i].replace('-', '_');\r\n  if (language in supportedLanguages) {\r\n    break;\r\n  }\r\n  if (language.length > 2) {\r\n    language = languages[i].substring(0, 2);\r\n    if (language in supportedLanguages) {\r\n      break;\r\n    }\r\n  }\r\n}\r\n\r\nconst selectedLanguage = supportedLanguages[language];\r\n\r\nexport const findStringKeys = (predicate) => Object.keys(selectedLanguage.data).filter(predicate);\r\n\r\nexport default (key) => selectedLanguage.data[key];\r\n"]},"metadata":{},"sourceType":"module"}