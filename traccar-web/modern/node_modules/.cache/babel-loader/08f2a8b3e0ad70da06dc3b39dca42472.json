{"ast":null,"code":"var _jsxFileName = \"D:\\\\Personal_Projects\\\\Vehicle Tracking\\\\Development2.0\\\\JFRD-ULTRAKER\\\\traccar-web\\\\modern\\\\src\\\\components\\\\registration\\\\LoginForm.js\";\nimport React, { useState } from 'react';\nimport { Grid, useMediaQuery, makeStyles, InputLabel, Select, MenuItem, FormControl, Button, TextField, Link } from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { sessionActions } from '../../store';\nimport t from '../../common/localization';\nimport StartPage from '../../StartPage';\nconst useStyles = makeStyles(theme => ({\n  logoContainer: {\n    textAlign: 'center',\n    color: theme.palette.primary.main\n  },\n  resetPassword: {\n    cursor: 'pointer'\n  }\n}));\n\nconst LoginForm = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const theme = useTheme();\n  const [failed, setFailed] = useState(false);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const registrationEnabled = useSelector(state => state.session.server ? state.session.server.registration : false);\n  const emailEnabled = useSelector(state => state.session.server ? state.session.server.emailEnabled : false);\n\n  const handleEmailChange = event => {\n    setEmail(event.target.value);\n  };\n\n  const handlePasswordChange = event => {\n    setPassword(event.target.value);\n  };\n\n  const handleLogin = async event => {\n    event.preventDefault();\n    const response = await fetch('/api/session', {\n      method: 'POST',\n      body: new URLSearchParams(`email=${encodeURIComponent(email)}&password=${encodeURIComponent(password)}`)\n    });\n\n    if (response.ok) {\n      const user = await response.json();\n      dispatch(sessionActions.updateUser(user));\n      history.push('/');\n    } else {\n      setFailed(true);\n      setPassword('');\n    }\n  };\n\n  const handleSpecialKey = e => {\n    if (e.keyCode === 13 && email && password) {\n      handleLogin(e);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(StartPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, useMediaQuery(theme.breakpoints.down('md')) && /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    className: classes.logoContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    height: \"64\",\n    width: \"240\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"use\", {\n    xlinkHref: \"/logo2.svg#img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    fullWidth: true,\n    error: failed,\n    label: t('userEmail'),\n    name: \"email\",\n    value: email,\n    autoComplete: \"email\",\n    autoFocus: true,\n    onChange: handleEmailChange,\n    onKeyUp: handleSpecialKey,\n    helperText: failed && 'Invalid username or password',\n    variant: \"filled\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    fullWidth: true,\n    error: failed,\n    label: t('userPassword'),\n    name: \"password\",\n    value: password,\n    type: \"password\",\n    autoComplete: \"current-password\",\n    onChange: handlePasswordChange,\n    onKeyUp: handleSpecialKey,\n    variant: \"filled\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleLogin,\n    onKeyUp: handleSpecialKey,\n    variant: \"contained\",\n    color: \"secondary\",\n    disabled: !email || !password,\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, t('loginLogin'))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => history.push('/register'),\n    disabled: !registrationEnabled,\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, t('loginRegister'))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"filled\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 15\n    }\n  }, t('loginLanguage')), /*#__PURE__*/React.createElement(Select, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"en\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  }, \"English\"))))), emailEnabled && /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    justify: \"flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    onClick: () => history.push('/reset-password'),\n    className: classes.resetPassword,\n    underline: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, t('loginReset'))))));\n};\n\nexport default LoginForm;","map":{"version":3,"sources":["D:/Personal_Projects/Vehicle Tracking/Development2.0/JFRD-ULTRAKER/traccar-web/modern/src/components/registration/LoginForm.js"],"names":["React","useState","Grid","useMediaQuery","makeStyles","InputLabel","Select","MenuItem","FormControl","Button","TextField","Link","useTheme","useDispatch","useSelector","useHistory","sessionActions","t","StartPage","useStyles","theme","logoContainer","textAlign","color","palette","primary","main","resetPassword","cursor","LoginForm","classes","dispatch","history","failed","setFailed","email","setEmail","password","setPassword","registrationEnabled","state","session","server","registration","emailEnabled","handleEmailChange","event","target","value","handlePasswordChange","handleLogin","preventDefault","response","fetch","method","body","URLSearchParams","encodeURIComponent","ok","user","json","updateUser","push","handleSpecialKey","e","keyCode","breakpoints","down"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  Grid, useMediaQuery, makeStyles, InputLabel, Select, MenuItem, FormControl, Button, TextField, Link,\r\n} from '@material-ui/core';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { sessionActions } from '../../store';\r\nimport t from '../../common/localization';\r\nimport StartPage from '../../StartPage';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  logoContainer: {\r\n    textAlign: 'center',\r\n    color: theme.palette.primary.main,\r\n  },\r\n  resetPassword: {\r\n    cursor: 'pointer',\r\n  },\r\n}));\r\n\r\nconst LoginForm = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const theme = useTheme();\r\n\r\n  const [failed, setFailed] = useState(false);\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const registrationEnabled = useSelector((state) => (state.session.server ? state.session.server.registration : false));\r\n  const emailEnabled = useSelector((state) => (state.session.server ? state.session.server.emailEnabled : false));\r\n\r\n  const handleEmailChange = (event) => {\r\n    setEmail(event.target.value);\r\n  };\r\n\r\n  const handlePasswordChange = (event) => {\r\n    setPassword(event.target.value);\r\n  };\r\n\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault();\r\n    const response = await fetch('/api/session', {\r\n      method: 'POST',\r\n      body: new URLSearchParams(`email=${encodeURIComponent(email)}&password=${encodeURIComponent(password)}`),\r\n    });\r\n    if (response.ok) {\r\n      const user = await response.json();\r\n      dispatch(sessionActions.updateUser(user));\r\n      history.push('/');\r\n    } else {\r\n      setFailed(true);\r\n      setPassword('');\r\n    }\r\n  };\r\n\r\n  const handleSpecialKey = (e) => {\r\n    if (e.keyCode === 13 && email && password) {\r\n      handleLogin(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <StartPage>\r\n      <Grid container direction=\"column\" spacing={2}>\r\n        {useMediaQuery(theme.breakpoints.down('md'))\r\n          && (\r\n          <Grid item className={classes.logoContainer}>\r\n            <svg height=\"64\" width=\"240\">\r\n              <use xlinkHref=\"/logo2.svg#img\" />\r\n            </svg>\r\n          </Grid>\r\n          )}\r\n        <Grid item>\r\n          <TextField\r\n            required\r\n            fullWidth\r\n            error={failed}\r\n            label={t('userEmail')}\r\n            name=\"email\"\r\n            value={email}\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n            onChange={handleEmailChange}\r\n            onKeyUp={handleSpecialKey}\r\n            helperText={failed && 'Invalid username or password'}\r\n            variant=\"filled\"\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <TextField\r\n            required\r\n            fullWidth\r\n            error={failed}\r\n            label={t('userPassword')}\r\n            name=\"password\"\r\n            value={password}\r\n            type=\"password\"\r\n            autoComplete=\"current-password\"\r\n            onChange={handlePasswordChange}\r\n            onKeyUp={handleSpecialKey}\r\n            variant=\"filled\"\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <Button\r\n            onClick={handleLogin}\r\n            onKeyUp={handleSpecialKey}\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            disabled={!email || !password}\r\n            fullWidth\r\n          >\r\n            {t('loginLogin')}\r\n          </Button>\r\n        </Grid>\r\n        <Grid item container>\r\n          <Grid item>\r\n            <Button onClick={() => history.push('/register')} disabled={!registrationEnabled} color=\"secondary\">\r\n              {t('loginRegister')}\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs>\r\n            <FormControl variant=\"filled\" fullWidth>\r\n              <InputLabel>{t('loginLanguage')}</InputLabel>\r\n              <Select>\r\n                <MenuItem value=\"en\">English</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n        </Grid>\r\n        {emailEnabled && (\r\n        <Grid item container justify=\"flex-end\">\r\n          <Grid item>\r\n            <Link onClick={() => history.push('/reset-password')} className={classes.resetPassword} underline=\"none\">{t('loginReset')}</Link>\r\n          </Grid>\r\n        </Grid>\r\n        )}\r\n      </Grid>\r\n    </StartPage>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n"]},"metadata":{},"sourceType":"module"}