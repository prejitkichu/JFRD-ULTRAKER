{"ast":null,"code":"var _jsxFileName = \"D:\\\\Personal_Projects\\\\Vehicle Tracking\\\\Development2.0\\\\JFRD-ULTRAKER\\\\traccar-web\\\\modern\\\\src\\\\attributes\\\\EditAttributesView.js\";\nimport React, { useState } from 'react';\nimport { Button, Checkbox, FilledInput, FormControl, FormControlLabel, Grid, IconButton, InputAdornment, InputLabel, makeStyles } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport AddIcon from '@material-ui/icons/Add';\nimport t from '../common/localization';\nimport AddAttributeDialog from './AddAttributeDialog';\nconst useStyles = makeStyles(theme => ({\n  addButton: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(1)\n  },\n  removeButton: {\n    marginRight: theme.spacing(1.5)\n  }\n}));\n\nconst EditAttributesView = _ref => {\n  let {\n    attributes,\n    setAttributes,\n    definitions\n  } = _ref;\n  const classes = useStyles();\n  const [addDialogShown, setAddDialogShown] = useState(false);\n\n  const updateAttribute = (key, value) => {\n    const updatedAttributes = { ...attributes\n    };\n    updatedAttributes[key] = value;\n    setAttributes(updatedAttributes);\n  };\n\n  const deleteAttribute = key => {\n    const updatedAttributes = { ...attributes\n    };\n    delete updatedAttributes[key];\n    setAttributes(updatedAttributes);\n  };\n\n  const getAttributeName = key => {\n    const definition = definitions[key];\n    return definition ? definition.name : key;\n  };\n\n  const getAttributeType = value => {\n    if (typeof value === 'number') {\n      return 'number';\n    }\n\n    if (typeof value === 'boolean') {\n      return 'boolean';\n    }\n\n    return 'string';\n  };\n\n  const convertToList = attributes => {\n    const booleanList = [];\n    const otherList = [];\n    Object.keys(attributes || []).forEach(key => {\n      const value = attributes[key];\n      const type = getAttributeType(value);\n\n      if (type === 'boolean') {\n        booleanList.push({\n          key,\n          value,\n          type\n        });\n      } else {\n        otherList.push({\n          key,\n          value,\n          type\n        });\n      }\n    });\n    return otherList.concat(booleanList);\n  };\n\n  const handleAddResult = definition => {\n    setAddDialogShown(false);\n\n    if (definition) {\n      switch (definition.type) {\n        case 'number':\n          updateAttribute(definition.key, 0);\n          break;\n\n        case 'boolean':\n          updateAttribute(definition.key, false);\n          break;\n\n        default:\n          updateAttribute(definition.key, '');\n          break;\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, convertToList(attributes).map(_ref2 => {\n    let {\n      key,\n      value,\n      type\n    } = _ref2;\n\n    if (type === 'boolean') {\n      return /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"space-between\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(FormControlLabel, {\n        control: /*#__PURE__*/React.createElement(Checkbox, {\n          checked: value,\n          onChange: e => updateAttribute(key, e.target.checked),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 19\n          }\n        }),\n        label: getAttributeName(key),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(IconButton, {\n        className: classes.removeButton,\n        onClick: () => deleteAttribute(key),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(CloseIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }\n      })));\n    }\n\n    return /*#__PURE__*/React.createElement(FormControl, {\n      variant: \"filled\",\n      margin: \"normal\",\n      key: key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }, getAttributeName(key)), /*#__PURE__*/React.createElement(FilledInput, {\n      type: type === 'number' ? 'number' : 'text',\n      value: value || '',\n      onChange: e => updateAttribute(key, e.target.value),\n      endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        onClick: () => deleteAttribute(key),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(CloseIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }\n      }))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }));\n  }), /*#__PURE__*/React.createElement(Button, {\n    size: \"large\",\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: () => setAddDialogShown(true),\n    startIcon: /*#__PURE__*/React.createElement(AddIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 20\n      }\n    }),\n    className: classes.addButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }, t('sharedAdd')), /*#__PURE__*/React.createElement(AddAttributeDialog, {\n    open: addDialogShown,\n    onResult: handleAddResult,\n    definitions: definitions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default EditAttributesView;","map":{"version":3,"sources":["D:/Personal_Projects/Vehicle Tracking/Development2.0/JFRD-ULTRAKER/traccar-web/modern/src/attributes/EditAttributesView.js"],"names":["React","useState","Button","Checkbox","FilledInput","FormControl","FormControlLabel","Grid","IconButton","InputAdornment","InputLabel","makeStyles","CloseIcon","AddIcon","t","AddAttributeDialog","useStyles","theme","addButton","marginTop","spacing","marginBottom","removeButton","marginRight","EditAttributesView","attributes","setAttributes","definitions","classes","addDialogShown","setAddDialogShown","updateAttribute","key","value","updatedAttributes","deleteAttribute","getAttributeName","definition","name","getAttributeType","convertToList","booleanList","otherList","Object","keys","forEach","type","push","concat","handleAddResult","map","e","target","checked"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport {\r\n  Button, Checkbox, FilledInput, FormControl, FormControlLabel, Grid, IconButton, InputAdornment, InputLabel, makeStyles,\r\n} from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport t from '../common/localization';\r\nimport AddAttributeDialog from './AddAttributeDialog';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  addButton: {\r\n    marginTop: theme.spacing(2),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  removeButton: {\r\n    marginRight: theme.spacing(1.5),\r\n  },\r\n}));\r\n\r\nconst EditAttributesView = ({ attributes, setAttributes, definitions }) => {\r\n  const classes = useStyles();\r\n\r\n  const [addDialogShown, setAddDialogShown] = useState(false);\r\n\r\n  const updateAttribute = (key, value) => {\r\n    const updatedAttributes = { ...attributes };\r\n    updatedAttributes[key] = value;\r\n    setAttributes(updatedAttributes);\r\n  };\r\n\r\n  const deleteAttribute = (key) => {\r\n    const updatedAttributes = { ...attributes };\r\n    delete updatedAttributes[key];\r\n    setAttributes(updatedAttributes);\r\n  };\r\n\r\n  const getAttributeName = (key) => {\r\n    const definition = definitions[key];\r\n    return definition ? definition.name : key;\r\n  };\r\n\r\n  const getAttributeType = (value) => {\r\n    if (typeof value === 'number') {\r\n      return 'number';\r\n    } if (typeof value === 'boolean') {\r\n      return 'boolean';\r\n    }\r\n    return 'string';\r\n  };\r\n\r\n  const convertToList = (attributes) => {\r\n    const booleanList = [];\r\n    const otherList = [];\r\n    Object.keys(attributes || []).forEach((key) => {\r\n      const value = attributes[key];\r\n      const type = getAttributeType(value);\r\n      if (type === 'boolean') {\r\n        booleanList.push({ key, value, type });\r\n      } else {\r\n        otherList.push({ key, value, type });\r\n      }\r\n    });\r\n    return otherList.concat(booleanList);\r\n  };\r\n\r\n  const handleAddResult = (definition) => {\r\n    setAddDialogShown(false);\r\n    if (definition) {\r\n      switch (definition.type) {\r\n        case 'number':\r\n          updateAttribute(definition.key, 0);\r\n          break;\r\n        case 'boolean':\r\n          updateAttribute(definition.key, false);\r\n          break;\r\n        default:\r\n          updateAttribute(definition.key, '');\r\n          break;\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {convertToList(attributes).map(({ key, value, type }) => {\r\n        if (type === 'boolean') {\r\n          return (\r\n            <Grid container direction=\"row\" justify=\"space-between\">\r\n              <FormControlLabel\r\n                control={(\r\n                  <Checkbox\r\n                    checked={value}\r\n                    onChange={(e) => updateAttribute(key, e.target.checked)}\r\n                  />\r\n                )}\r\n                label={getAttributeName(key)}\r\n              />\r\n              <IconButton className={classes.removeButton} onClick={() => deleteAttribute(key)}>\r\n                <CloseIcon />\r\n              </IconButton>\r\n            </Grid>\r\n          );\r\n        }\r\n        return (\r\n          <FormControl variant=\"filled\" margin=\"normal\" key={key}>\r\n            <InputLabel>{getAttributeName(key)}</InputLabel>\r\n            <FilledInput\r\n              type={type === 'number' ? 'number' : 'text'}\r\n              value={value || ''}\r\n              onChange={(e) => updateAttribute(key, e.target.value)}\r\n              endAdornment={(\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton onClick={() => deleteAttribute(key)}>\r\n                    <CloseIcon />\r\n                  </IconButton>\r\n                </InputAdornment>\r\n                )}\r\n            />\r\n          </FormControl>\r\n        );\r\n      })}\r\n      <Button\r\n        size=\"large\"\r\n        variant=\"outlined\"\r\n        color=\"primary\"\r\n        onClick={() => setAddDialogShown(true)}\r\n        startIcon={<AddIcon />}\r\n        className={classes.addButton}\r\n      >\r\n        {t('sharedAdd')}\r\n      </Button>\r\n      <AddAttributeDialog\r\n        open={addDialogShown}\r\n        onResult={handleAddResult}\r\n        definitions={definitions}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditAttributesView;\r\n"]},"metadata":{},"sourceType":"module"}